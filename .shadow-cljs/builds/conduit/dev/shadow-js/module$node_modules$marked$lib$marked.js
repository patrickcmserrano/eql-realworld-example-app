["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/marked/lib/marked.js"],"~:js","shadow$provide.module$node_modules$marked$lib$marked=function(global,require,module,exports){(function(root){function Lexer(options){this.tokens=[];this.tokens.links={};this.options=options||marked.defaults;this.rules=block.normal;this.options.gfm&&(this.rules=this.options.tables?block.tables:block.gfm)}function InlineLexer(links,options){this.options=options||marked.defaults;this.links=links;this.rules=inline.normal;this.renderer=this.options.renderer||new Renderer;this.renderer.options=this.options;\nif(!this.links)throw Error(\"Tokens array requires a `links` property.\");this.options.gfm?this.rules=this.options.breaks?inline.breaks:inline.gfm:this.options.pedantic&&(this.rules=inline.pedantic)}function Renderer(options){this.options=options||{}}function TextRenderer(){}function Parser(options){this.tokens=[];this.token=null;this.options=options||marked.defaults;this.options.renderer=this.options.renderer||new Renderer;this.renderer=this.options.renderer;this.renderer.options=this.options}function escape(html,\nencode){return html.replace(encode?/&/g:/&(?!#?\\w+;)/g,\"\\x26amp;\").replace(/</g,\"\\x26lt;\").replace(/>/g,\"\\x26gt;\").replace(/\"/g,\"\\x26quot;\").replace(/'/g,\"\\x26#39;\")}function unescape(html){return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,function(_,n){n=n.toLowerCase();return\"colon\"===n?\":\":\"#\"===n.charAt(0)?\"x\"===n.charAt(1)?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1)):\"\"})}function edit(regex,opt){regex=regex.source;opt=opt||\"\";return{replace:function(name,\nval){val=val.source||val;val=val.replace(/(^|[^\\[])\\^/g,\"$1\");regex=regex.replace(name,val);return this},getRegex:function(){return new RegExp(regex,opt)}}}function resolveUrl(base,href){baseUrls[\" \"+base]||(/^[^:]+:\\/*[^/]*$/.test(base)?baseUrls[\" \"+base]=base+\"/\":baseUrls[\" \"+base]=base.replace(/[^/]*$/,\"\"));base=baseUrls[\" \"+base];return\"//\"===href.slice(0,2)?base.replace(/:[\\s\\S]*/,\":\")+href:\"/\"===href.charAt(0)?base.replace(/(:\\/*[^/]*)[\\s\\S]*/,\"$1\")+href:base+href}function noop(){}function merge(obj){for(var i=\n1,target,key;i<arguments.length;i++)for(key in target=arguments[i],target)Object.prototype.hasOwnProperty.call(target,key)&&(obj[key]=target[key]);return obj}function marked(src,opt,callback){if(\"undefined\"===typeof src||null===src)throw Error(\"marked(): input parameter is undefined or null\");if(\"string\"!==typeof src)throw Error(\"marked(): input parameter is of type \"+Object.prototype.toString.call(src)+\", string expected\");if(callback||\"function\"===typeof opt){callback||(callback=opt,opt=null);opt=\nmerge({},marked.defaults,opt||{});var highlight=opt.highlight,i=0;try{var tokens=Lexer.lex(src,opt)}catch(e){return callback(e)}var pending=tokens.length;var done=function(err){if(err)return opt.highlight=highlight,callback(err);try{var out=Parser.parse(tokens,opt)}catch(e$9){err=e$9}opt.highlight=highlight;return err?callback(err):callback(null,out)};if(!highlight||3>highlight.length)return done();delete opt.highlight;if(!pending)return done();for(;i<tokens.length;i++)(function(token){return\"code\"!==\ntoken.type?--pending||done():highlight(token.text,token.lang,function(err,code){if(err)return done(err);if(null==code||code===token.text)return--pending||done();token.text=code;token.escaped=!0;--pending||done()})})(tokens[i])}else try{return opt&&(opt=merge({},marked.defaults,opt)),Parser.parse(Lexer.lex(src,opt),opt)}catch(e$10){e$10.message+=\"\\nPlease report this to https://github.com/markedjs/marked.\";if((opt||marked.defaults).silent)return\"\\x3cp\\x3eAn error occurred:\\x3c/p\\x3e\\x3cpre\\x3e\"+escape(e$10.message+\n\"\",!0)+\"\\x3c/pre\\x3e\";throw e$10;}}var block={newline:/^\\n+/,code:/^( {4}[^\\n]+\\n*)+/,fences:noop,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,heading:/^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,nptable:noop,blockquote:/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,list:/^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,html:/^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,def:/^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\ntable:noop,lheading:/^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,paragraph:/^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,text:/^[^\\n]+/,_label:/(?:\\\\[\\[\\]]|[^\\[\\]])+/,_title:/(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/};block.def=edit(block.def).replace(\"label\",block._label).replace(\"title\",block._title).getRegex();block.bullet=/(?:[*+-]|\\d+\\.)/;block.item=/^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;block.item=edit(block.item,\"gm\").replace(/bull/g,block.bullet).getRegex();\nblock.list=edit(block.list).replace(/bull/g,block.bullet).replace(\"hr\",\"\\\\n+(?\\x3d\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))\").replace(\"def\",\"\\\\n+(?\\x3d\"+block.def.source+\")\").getRegex();block._tag=\"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b\";block.html=edit(block.html).replace(\"comment\",/\\x3c!--[\\s\\S]*?--\\x3e/).replace(\"closed\",/<(tag)[\\s\\S]+?<\\/\\1>/).replace(\"closing\",\n/<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/).replace(/tag/g,block._tag).getRegex();block.paragraph=edit(block.paragraph).replace(\"hr\",block.hr).replace(\"heading\",block.heading).replace(\"lheading\",block.lheading).replace(\"tag\",\"\\x3c\"+block._tag).getRegex();block.blockquote=edit(block.blockquote).replace(\"paragraph\",block.paragraph).getRegex();block.normal=merge({},block);block.gfm=merge({},block.normal,{fences:/^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/});\nblock.gfm.paragraph=edit(block.paragraph).replace(\"(?!\",\"(?!\"+block.gfm.fences.source.replace(\"\\\\1\",\"\\\\2\")+\"|\"+block.list.source.replace(\"\\\\1\",\"\\\\3\")+\"|\").getRegex();block.tables=merge({},block.gfm,{nptable:/^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,table:/^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/});Lexer.rules=block;Lexer.lex=function(src,options){return(new Lexer(options)).lex(src)};Lexer.prototype.lex=function(src){src=src.replace(/\\r\\n|\\r/g,\"\\n\").replace(/\\t/g,\n\"    \").replace(/\\u00a0/g,\" \").replace(/\\u2424/g,\"\\n\");return this.token(src,!0)};Lexer.prototype.token=function(src,top){src=src.replace(/^ +$/gm,\"\");for(var next,loose,cap,bull,item,i,l;src;){if(cap=this.rules.newline.exec(src))src=src.substring(cap[0].length),1<cap[0].length&&this.tokens.push({type:\"space\"});if(cap=this.rules.code.exec(src))src=src.substring(cap[0].length),cap=cap[0].replace(/^ {4}/gm,\"\"),this.tokens.push({type:\"code\",text:this.options.pedantic?cap:cap.replace(/\\n+$/,\"\")});else if(cap=\nthis.rules.fences.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"code\",lang:cap[2],text:cap[3]||\"\"});else if(cap=this.rules.heading.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"heading\",depth:cap[1].length,text:cap[2]});else if(top&&(cap=this.rules.nptable.exec(src))){src=src.substring(cap[0].length);item={type:\"table\",header:cap[1].replace(/^ *| *\\| *$/g,\"\").split(/ *\\| */),align:cap[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:cap[3].replace(/\\n$/,\n\"\").split(\"\\n\")};for(i=0;i<item.align.length;i++)/^ *-+: *$/.test(item.align[i])?item.align[i]=\"right\":/^ *:-+: *$/.test(item.align[i])?item.align[i]=\"center\":/^ *:-+ *$/.test(item.align[i])?item.align[i]=\"left\":item.align[i]=null;for(i=0;i<item.cells.length;i++)item.cells[i]=item.cells[i].split(/ *\\| */);this.tokens.push(item)}else if(cap=this.rules.hr.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"hr\"});else if(cap=this.rules.blockquote.exec(src))src=src.substring(cap[0].length),\nthis.tokens.push({type:\"blockquote_start\"}),cap=cap[0].replace(/^ *> ?/gm,\"\"),this.token(cap,top),this.tokens.push({type:\"blockquote_end\"});else if(cap=this.rules.list.exec(src)){src=src.substring(cap[0].length);bull=cap[2];next=1<bull.length;this.tokens.push({type:\"list_start\",ordered:next,start:next?+bull:\"\"});cap=cap[0].match(this.rules.item);next=!1;l=cap.length;for(i=0;i<l;i++)item=cap[i],loose=item.length,item=item.replace(/^ *([*+-]|\\d+\\.) +/,\"\"),~item.indexOf(\"\\n \")&&(loose-=item.length,item=\nthis.options.pedantic?item.replace(/^ {1,4}/gm,\"\"):item.replace(new RegExp(\"^ {1,\"+loose+\"}\",\"gm\"),\"\")),this.options.smartLists&&i!==l-1&&(loose=block.bullet.exec(cap[i+1])[0],bull===loose||1<bull.length&&1<loose.length||(src=cap.slice(i+1).join(\"\\n\")+src,i=l-1)),loose=next||/\\n\\n(?!\\s*$)/.test(item),i!==l-1&&(next=\"\\n\"===item.charAt(item.length-1),loose||(loose=next)),this.tokens.push({type:loose?\"loose_item_start\":\"list_item_start\"}),this.token(item,!1),this.tokens.push({type:\"list_item_end\"});\nthis.tokens.push({type:\"list_end\"})}else if(cap=this.rules.html.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:this.options.sanitize?\"paragraph\":\"html\",pre:!this.options.sanitizer&&(\"pre\"===cap[1]||\"script\"===cap[1]||\"style\"===cap[1]),text:cap[0]});else if(top&&(cap=this.rules.def.exec(src)))src=src.substring(cap[0].length),cap[3]&&(cap[3]=cap[3].substring(1,cap[3].length-1)),bull=cap[1].toLowerCase(),this.tokens.links[bull]||(this.tokens.links[bull]={href:cap[2],title:cap[3]});\nelse if(top&&(cap=this.rules.table.exec(src))){src=src.substring(cap[0].length);item={type:\"table\",header:cap[1].replace(/^ *| *\\| *$/g,\"\").split(/ *\\| */),align:cap[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:cap[3].replace(/(?: *\\| *)?\\n$/,\"\").split(\"\\n\")};for(i=0;i<item.align.length;i++)/^ *-+: *$/.test(item.align[i])?item.align[i]=\"right\":/^ *:-+: *$/.test(item.align[i])?item.align[i]=\"center\":/^ *:-+ *$/.test(item.align[i])?item.align[i]=\"left\":item.align[i]=null;for(i=0;i<item.cells.length;i++)item.cells[i]=\nitem.cells[i].replace(/^ *\\| *| *\\| *$/g,\"\").split(/ *\\| */);this.tokens.push(item)}else if(cap=this.rules.lheading.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"heading\",depth:\"\\x3d\"===cap[2]?1:2,text:cap[1]});else if(top&&(cap=this.rules.paragraph.exec(src)))src=src.substring(cap[0].length),this.tokens.push({type:\"paragraph\",text:\"\\n\"===cap[1].charAt(cap[1].length-1)?cap[1].slice(0,-1):cap[1]});else if(cap=this.rules.text.exec(src))src=src.substring(cap[0].length),this.tokens.push({type:\"text\",\ntext:cap[0]});else if(src)throw Error(\"Infinite loop on byte: \"+src.charCodeAt(0));}return this.tokens};var inline={escape:/^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,autolink:/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,url:noop,tag:/^\\x3c!--[\\s\\S]*?--\\x3e|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,link:/^!?\\[(inside)\\]\\(href\\)/,reflink:/^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,nolink:/^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,strong:/^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,em:/^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\ncode:/^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,br:/^ {2,}\\n(?!\\s*$)/,del:noop,text:/^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/,_scheme:/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,_email:/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/};inline.autolink=edit(inline.autolink).replace(\"scheme\",inline._scheme).replace(\"email\",inline._email).getRegex();inline._inside=/(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;inline._href=/\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\ninline.link=edit(inline.link).replace(\"inside\",inline._inside).replace(\"href\",inline._href).getRegex();inline.reflink=edit(inline.reflink).replace(\"inside\",inline._inside).getRegex();inline.normal=merge({},inline);inline.pedantic=merge({},inline.normal,{strong:/^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,em:/^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/});inline.gfm=merge({},inline.normal,{escape:edit(inline.escape).replace(\"])\",\"~|])\").getRegex(),url:edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/).replace(\"email\",\ninline._email).getRegex(),_backpedal:/(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~~(?=\\S)([\\s\\S]*?\\S)~~/,text:edit(inline.text).replace(\"]|\",\"~]|\").replace(\"|\",\"|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%\\x26'*+/\\x3d?^_`{\\\\|}~-]+@|\").getRegex()});inline.breaks=merge({},inline.gfm,{br:edit(inline.br).replace(\"{2,}\",\"*\").getRegex(),text:edit(inline.gfm.text).replace(\"{2,}\",\"*\").getRegex()});InlineLexer.rules=inline;InlineLexer.output=function(src,links,options){return(new InlineLexer(links,\noptions)).output(src)};InlineLexer.prototype.output=function(src){for(var out=\"\",link,href;src;)if(href=this.rules.escape.exec(src))src=src.substring(href[0].length),out+=href[1];else if(href=this.rules.autolink.exec(src))src=src.substring(href[0].length),\"@\"===href[2]?(link=escape(this.mangle(href[1])),href=\"mailto:\"+link):href=link=escape(href[1]),out+=this.renderer.link(href,null,link);else if(!this.inLink&&(href=this.rules.url.exec(src)))href[0]=this.rules._backpedal.exec(href[0])[0],src=src.substring(href[0].length),\n\"@\"===href[2]?(link=escape(href[0]),href=\"mailto:\"+link):(link=escape(href[0]),href=\"www.\"===href[1]?\"http://\"+link:link),out+=this.renderer.link(href,null,link);else if(href=this.rules.tag.exec(src))!this.inLink&&/^<a /i.test(href[0])?this.inLink=!0:this.inLink&&/^<\\/a>/i.test(href[0])&&(this.inLink=!1),src=src.substring(href[0].length),out+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(href[0]):escape(href[0]):href[0];else if(href=this.rules.link.exec(src))src=src.substring(href[0].length),\nthis.inLink=!0,out+=this.outputLink(href,{href:href[2],title:href[3]}),this.inLink=!1;else if((href=this.rules.reflink.exec(src))||(href=this.rules.nolink.exec(src)))src=src.substring(href[0].length),link=(href[2]||href[1]).replace(/\\s+/g,\" \"),(link=this.links[link.toLowerCase()])&&link.href?(this.inLink=!0,out+=this.outputLink(href,link),this.inLink=!1):(out+=href[0].charAt(0),src=href[0].substring(1)+src);else if(href=this.rules.strong.exec(src))src=src.substring(href[0].length),out+=this.renderer.strong(this.output(href[2]||\nhref[1]));else if(href=this.rules.em.exec(src))src=src.substring(href[0].length),out+=this.renderer.em(this.output(href[2]||href[1]));else if(href=this.rules.code.exec(src))src=src.substring(href[0].length),out+=this.renderer.codespan(escape(href[2].trim(),!0));else if(href=this.rules.br.exec(src))src=src.substring(href[0].length),out+=this.renderer.br();else if(href=this.rules.del.exec(src))src=src.substring(href[0].length),out+=this.renderer.del(this.output(href[1]));else if(href=this.rules.text.exec(src))src=\nsrc.substring(href[0].length),out+=this.renderer.text(escape(this.smartypants(href[0])));else if(src)throw Error(\"Infinite loop on byte: \"+src.charCodeAt(0));return out};InlineLexer.prototype.outputLink=function(cap,link){var href=escape(link.href);link=link.title?escape(link.title):null;return\"!\"!==cap[0].charAt(0)?this.renderer.link(href,link,this.output(cap[1])):this.renderer.image(href,link,escape(cap[1]))};InlineLexer.prototype.smartypants=function(text){return this.options.smartypants?text.replace(/---/g,\n\"—\").replace(/--/g,\"–\").replace(/(^|[-\\u2014/(\\[{\"\\s])'/g,\"$1‘\").replace(/'/g,\"’\").replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g,\"$1“\").replace(/\"/g,\"”\").replace(/\\.{3}/g,\"…\"):text};InlineLexer.prototype.mangle=function(text){if(!this.options.mangle)return text;for(var out=\"\",l=text.length,i=0,ch;i<l;i++)ch=text.charCodeAt(i),.5<Math.random()&&(ch=\"x\"+ch.toString(16)),out+=\"\\x26#\"+ch+\";\";return out};Renderer.prototype.code=function(code,lang,escaped){if(this.options.highlight){var out=this.options.highlight(code,\nlang);null!=out&&out!==code&&(escaped=!0,code=out)}return lang?'\\x3cpre\\x3e\\x3ccode class\\x3d\"'+this.options.langPrefix+escape(lang,!0)+'\"\\x3e'+(escaped?code:escape(code,!0))+\"\\n\\x3c/code\\x3e\\x3c/pre\\x3e\\n\":\"\\x3cpre\\x3e\\x3ccode\\x3e\"+(escaped?code:escape(code,!0))+\"\\n\\x3c/code\\x3e\\x3c/pre\\x3e\"};Renderer.prototype.blockquote=function(quote){return\"\\x3cblockquote\\x3e\\n\"+quote+\"\\x3c/blockquote\\x3e\\n\"};Renderer.prototype.html=function(html){return html};Renderer.prototype.heading=function(text,level,raw){return\"\\x3ch\"+\nlevel+' id\\x3d\"'+this.options.headerPrefix+raw.toLowerCase().replace(/[^\\w]+/g,\"-\")+'\"\\x3e'+text+\"\\x3c/h\"+level+\"\\x3e\\n\"};Renderer.prototype.hr=function(){return this.options.xhtml?\"\\x3chr/\\x3e\\n\":\"\\x3chr\\x3e\\n\"};Renderer.prototype.list=function(body,ordered,start){var type=ordered?\"ol\":\"ul\";return\"\\x3c\"+type+(ordered&&1!==start?' start\\x3d\"'+start+'\"':\"\")+\"\\x3e\\n\"+body+\"\\x3c/\"+type+\"\\x3e\\n\"};Renderer.prototype.listitem=function(text){return\"\\x3cli\\x3e\"+text+\"\\x3c/li\\x3e\\n\"};Renderer.prototype.paragraph=\nfunction(text){return\"\\x3cp\\x3e\"+text+\"\\x3c/p\\x3e\\n\"};Renderer.prototype.table=function(header,body){return\"\\x3ctable\\x3e\\n\\x3cthead\\x3e\\n\"+header+\"\\x3c/thead\\x3e\\n\\x3ctbody\\x3e\\n\"+body+\"\\x3c/tbody\\x3e\\n\\x3c/table\\x3e\\n\"};Renderer.prototype.tablerow=function(content){return\"\\x3ctr\\x3e\\n\"+content+\"\\x3c/tr\\x3e\\n\"};Renderer.prototype.tablecell=function(content,flags){var type=flags.header?\"th\":\"td\";return(flags.align?\"\\x3c\"+type+' style\\x3d\"text-align:'+flags.align+'\"\\x3e':\"\\x3c\"+type+\"\\x3e\")+content+\n\"\\x3c/\"+type+\"\\x3e\\n\"};Renderer.prototype.strong=function(text){return\"\\x3cstrong\\x3e\"+text+\"\\x3c/strong\\x3e\"};Renderer.prototype.em=function(text){return\"\\x3cem\\x3e\"+text+\"\\x3c/em\\x3e\"};Renderer.prototype.codespan=function(text){return\"\\x3ccode\\x3e\"+text+\"\\x3c/code\\x3e\"};Renderer.prototype.br=function(){return this.options.xhtml?\"\\x3cbr/\\x3e\":\"\\x3cbr\\x3e\"};Renderer.prototype.del=function(text){return\"\\x3cdel\\x3e\"+text+\"\\x3c/del\\x3e\"};Renderer.prototype.link=function(href,title,text){if(this.options.sanitize){try{var prot=\ndecodeURIComponent(unescape(href)).replace(/[^\\w:]/g,\"\").toLowerCase()}catch(e){return text}if(0===prot.indexOf(\"javascript:\")||0===prot.indexOf(\"vbscript:\")||0===prot.indexOf(\"data:\"))return text}this.options.baseUrl&&!originIndependentUrl.test(href)&&(href=resolveUrl(this.options.baseUrl,href));href='\\x3ca href\\x3d\"'+href+'\"';title&&(href+=' title\\x3d\"'+title+'\"');return href+(\"\\x3e\"+text+\"\\x3c/a\\x3e\")};Renderer.prototype.image=function(href,title,text){this.options.baseUrl&&!originIndependentUrl.test(href)&&\n(href=resolveUrl(this.options.baseUrl,href));href='\\x3cimg src\\x3d\"'+href+'\" alt\\x3d\"'+text+'\"';title&&(href+=' title\\x3d\"'+title+'\"');return href+=this.options.xhtml?\"/\\x3e\":\"\\x3e\"};Renderer.prototype.text=function(text){return text};TextRenderer.prototype.strong=TextRenderer.prototype.em=TextRenderer.prototype.codespan=TextRenderer.prototype.del=TextRenderer.prototype.text=function(text){return text};TextRenderer.prototype.link=TextRenderer.prototype.image=function(href,title,text){return\"\"+text};\nTextRenderer.prototype.br=function(){return\"\"};Parser.parse=function(src,options){return(new Parser(options)).parse(src)};Parser.prototype.parse=function(src){this.inline=new InlineLexer(src.links,this.options);this.inlineText=new InlineLexer(src.links,merge({},this.options,{renderer:new TextRenderer}));this.tokens=src.reverse();for(src=\"\";this.next();)src+=this.tok();return src};Parser.prototype.next=function(){return this.token=this.tokens.pop()};Parser.prototype.peek=function(){return this.tokens[this.tokens.length-\n1]||0};Parser.prototype.parseText=function(){for(var body=this.token.text;\"text\"===this.peek().type;)body+=\"\\n\"+this.next().text;return this.inline.output(body)};Parser.prototype.tok=function(){switch(this.token.type){case \"space\":return\"\";case \"hr\":return this.renderer.hr();case \"heading\":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,unescape(this.inlineText.output(this.token.text)));case \"code\":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);\ncase \"table\":var header=\"\",body=\"\",i,j;var cell=\"\";for(i=0;i<this.token.header.length;i++)cell+=this.renderer.tablecell(this.inline.output(this.token.header[i]),{header:!0,align:this.token.align[i]});header+=this.renderer.tablerow(cell);for(i=0;i<this.token.cells.length;i++){var row=this.token.cells[i];cell=\"\";for(j=0;j<row.length;j++)cell+=this.renderer.tablecell(this.inline.output(row[j]),{header:!1,align:this.token.align[j]});body+=this.renderer.tablerow(cell)}return this.renderer.table(header,\nbody);case \"blockquote_start\":for(body=\"\";\"blockquote_end\"!==this.next().type;)body+=this.tok();return this.renderer.blockquote(body);case \"list_start\":body=\"\";header=this.token.ordered;for(i=this.token.start;\"list_end\"!==this.next().type;)body+=this.tok();return this.renderer.list(body,header,i);case \"list_item_start\":for(body=\"\";\"list_item_end\"!==this.next().type;)body+=\"text\"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(body);case \"loose_item_start\":for(body=\"\";\"list_item_end\"!==\nthis.next().type;)body+=this.tok();return this.renderer.listitem(body);case \"html\":return body=this.token.pre||this.options.pedantic?this.token.text:this.inline.output(this.token.text),this.renderer.html(body);case \"paragraph\":return this.renderer.paragraph(this.inline.output(this.token.text));case \"text\":return this.renderer.paragraph(this.parseText())}};var baseUrls={},originIndependentUrl=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;noop.exec=noop;marked.options=marked.setOptions=function(opt){merge(marked.defaults,\nopt);return marked};marked.defaults={gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,sanitizer:null,mangle:!0,smartLists:!1,silent:!1,highlight:null,langPrefix:\"lang-\",smartypants:!1,headerPrefix:\"\",renderer:new Renderer,xhtml:!1,baseUrl:null};marked.Parser=Parser;marked.parser=Parser.parse;marked.Renderer=Renderer;marked.TextRenderer=TextRenderer;marked.Lexer=Lexer;marked.lexer=Lexer.lex;marked.InlineLexer=InlineLexer;marked.inlineLexer=InlineLexer.output;marked.parse=marked;\"undefined\"!==typeof module&&\n\"object\"===typeof exports?module.exports=marked:\"function\"===typeof define&&define.amd?define(function(){return marked}):root.marked=marked})(this||(\"undefined\"!==typeof window?window:global))}","~:source","shadow$provide[\"module$node_modules$marked$lib$marked\"] = function(global,require,module,exports) {\n/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = edit(block.html)\n  .replace('comment', /<!--[\\s\\S]*?-->/)\n  .replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  .replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/)\n  .replace(/tag/g, block._tag)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', '<' + block._tag)\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex()\n\ninline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = edit(inline.link)\n  .replace('inside', inline._inside)\n  .replace('href', inline._href)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('inside', inline._inside)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer(),\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["Renderer","table","message","tablerow","setOptions","peek","lang","parser","heading","br","renderer","list","langPrefix","url","ordered","align","next","silent","token","output","pedantic","InlineLexer","lheading","_scheme","newline","tok","TextRenderer","image","headerPrefix","breaks","xhtml","inline","_email","tables","em","marked","_href","gfm","nolink","Parser","outputLink","normal","exec","hr","_label","escape","lexer","href","del","replace","tag","_backpedal","inlineLexer","rules","baseUrl","parseText","start","sanitizer","text","item","smartLists","lex","paragraph","listitem","escaped","links","getRegex","tablecell","_tag","title","link","cells","type","fences","inLink","pre","depth","blockquote","mangle","bullet","parse","Lexer","strong","def","highlight","inlineText","html","nptable","options","_inside","codespan","_title","code","defaults","sanitize","header","smartypants","reflink","autolink","tokens"]],"~:compiled-at",1599160977807,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$marked$lib$marked.js\",\n\"lineCount\":43,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/marked/lib/marked.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$marked$lib$marked\\\"] = function(global,require,module,exports) {\\n/**\\n * marked - a markdown parser\\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\\n * https://github.com/markedjs/marked\\n */\\n\\n;(function(root) {\\n'use strict';\\n\\n/**\\n * Block-Level Grammar\\n */\\n\\nvar block = {\\n  newline: /^\\\\n+/,\\n  code: /^( {4}[^\\\\n]+\\\\n*)+/,\\n  fences: noop,\\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)/,\\n  heading: /^ *(#{1,6}) *([^\\\\n]+?) *#* *(?:\\\\n+|$)/,\\n  nptable: noop,\\n  blockquote: /^( {0,3}> ?(paragraph|[^\\\\n]*)(?:\\\\n|$))+/,\\n  list: /^( *)(bull) [\\\\s\\\\S]+?(?:hr|def|\\\\n{2,}(?! )(?!\\\\1bull )\\\\n*|\\\\s*$)/,\\n  html: /^ *(?:comment *(?:\\\\n|\\\\s*$)|closed *(?:\\\\n{2,}|\\\\s*$)|closing *(?:\\\\n{2,}|\\\\s*$))/,\\n  def: /^ {0,3}\\\\[(label)\\\\]: *\\\\n? *<?([^\\\\s>]+)>?(?:(?: +\\\\n? *| *\\\\n *)(title))? *(?:\\\\n+|$)/,\\n  table: noop,\\n  lheading: /^([^\\\\n]+)\\\\n *(=|-){2,} *(?:\\\\n+|$)/,\\n  paragraph: /^([^\\\\n]+(?:\\\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\\\n]+)+)/,\\n  text: /^[^\\\\n]+/\\n};\\n\\nblock._label = /(?:\\\\\\\\[\\\\[\\\\]]|[^\\\\[\\\\]])+/;\\nblock._title = /(?:\\\"(?:\\\\\\\\\\\"|[^\\\"]|\\\"[^\\\"\\\\n]*\\\")*\\\"|'\\\\n?(?:[^'\\\\n]+\\\\n?)*'|\\\\([^()]*\\\\))/;\\nblock.def = edit(block.def)\\n  .replace('label', block._label)\\n  .replace('title', block._title)\\n  .getRegex();\\n\\nblock.bullet = /(?:[*+-]|\\\\d+\\\\.)/;\\nblock.item = /^( *)(bull) [^\\\\n]*(?:\\\\n(?!\\\\1bull )[^\\\\n]*)*/;\\nblock.item = edit(block.item, 'gm')\\n  .replace(/bull/g, block.bullet)\\n  .getRegex();\\n\\nblock.list = edit(block.list)\\n  .replace(/bull/g, block.bullet)\\n  .replace('hr', '\\\\\\\\n+(?=\\\\\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\\\\\* *){3,})(?:\\\\\\\\n+|$))')\\n  .replace('def', '\\\\\\\\n+(?=' + block.def.source + ')')\\n  .getRegex();\\n\\nblock._tag = '(?!(?:'\\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\\n  + '|span|br|wbr|ins|del|img)\\\\\\\\b)\\\\\\\\w+(?!:|[^\\\\\\\\w\\\\\\\\s@]*@)\\\\\\\\b';\\n\\nblock.html = edit(block.html)\\n  .replace('comment', /\\u003c!--[\\\\s\\\\S]*?--\\u003e/)\\n  .replace('closed', /<(tag)[\\\\s\\\\S]+?<\\\\/\\\\1>/)\\n  .replace('closing', /<tag(?:\\\"[^\\\"]*\\\"|'[^']*'|\\\\s[^'\\\"\\\\/>\\\\s]*)*?\\\\/?>/)\\n  .replace(/tag/g, block._tag)\\n  .getRegex();\\n\\nblock.paragraph = edit(block.paragraph)\\n  .replace('hr', block.hr)\\n  .replace('heading', block.heading)\\n  .replace('lheading', block.lheading)\\n  .replace('tag', '<' + block._tag)\\n  .getRegex();\\n\\nblock.blockquote = edit(block.blockquote)\\n  .replace('paragraph', block.paragraph)\\n  .getRegex();\\n\\n/**\\n * Normal Block Grammar\\n */\\n\\nblock.normal = merge({}, block);\\n\\n/**\\n * GFM Block Grammar\\n */\\n\\nblock.gfm = merge({}, block.normal, {\\n  fences: /^ *(`{3,}|~{3,})[ \\\\.]*(\\\\S+)? *\\\\n([\\\\s\\\\S]*?)\\\\n? *\\\\1 *(?:\\\\n+|$)/,\\n  paragraph: /^/,\\n  heading: /^ *(#{1,6}) +([^\\\\n]+?) *#* *(?:\\\\n+|$)/\\n});\\n\\nblock.gfm.paragraph = edit(block.paragraph)\\n  .replace('(?!', '(?!'\\n    + block.gfm.fences.source.replace('\\\\\\\\1', '\\\\\\\\2') + '|'\\n    + block.list.source.replace('\\\\\\\\1', '\\\\\\\\3') + '|')\\n  .getRegex();\\n\\n/**\\n * GFM + Tables Block Grammar\\n */\\n\\nblock.tables = merge({}, block.gfm, {\\n  nptable: /^ *(\\\\S.*\\\\|.*)\\\\n *([-:]+ *\\\\|[-| :]*)\\\\n((?:.*\\\\|.*(?:\\\\n|$))*)\\\\n*/,\\n  table: /^ *\\\\|(.+)\\\\n *\\\\|( *[-:]+[-| :]*)\\\\n((?: *\\\\|.*(?:\\\\n|$))*)\\\\n*/\\n});\\n\\n/**\\n * Block Lexer\\n */\\n\\nfunction Lexer(options) {\\n  this.tokens = [];\\n  this.tokens.links = {};\\n  this.options = options || marked.defaults;\\n  this.rules = block.normal;\\n\\n  if (this.options.gfm) {\\n    if (this.options.tables) {\\n      this.rules = block.tables;\\n    } else {\\n      this.rules = block.gfm;\\n    }\\n  }\\n}\\n\\n/**\\n * Expose Block Rules\\n */\\n\\nLexer.rules = block;\\n\\n/**\\n * Static Lex Method\\n */\\n\\nLexer.lex = function(src, options) {\\n  var lexer = new Lexer(options);\\n  return lexer.lex(src);\\n};\\n\\n/**\\n * Preprocessing\\n */\\n\\nLexer.prototype.lex = function(src) {\\n  src = src\\n    .replace(/\\\\r\\\\n|\\\\r/g, '\\\\n')\\n    .replace(/\\\\t/g, '    ')\\n    .replace(/\\\\u00a0/g, ' ')\\n    .replace(/\\\\u2424/g, '\\\\n');\\n\\n  return this.token(src, true);\\n};\\n\\n/**\\n * Lexing\\n */\\n\\nLexer.prototype.token = function(src, top) {\\n  src = src.replace(/^ +$/gm, '');\\n  var next,\\n      loose,\\n      cap,\\n      bull,\\n      b,\\n      item,\\n      space,\\n      i,\\n      tag,\\n      l,\\n      isordered;\\n\\n  while (src) {\\n    // newline\\n    if (cap = this.rules.newline.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      if (cap[0].length > 1) {\\n        this.tokens.push({\\n          type: 'space'\\n        });\\n      }\\n    }\\n\\n    // code\\n    if (cap = this.rules.code.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      cap = cap[0].replace(/^ {4}/gm, '');\\n      this.tokens.push({\\n        type: 'code',\\n        text: !this.options.pedantic\\n          ? cap.replace(/\\\\n+$/, '')\\n          : cap\\n      });\\n      continue;\\n    }\\n\\n    // fences (gfm)\\n    if (cap = this.rules.fences.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'code',\\n        lang: cap[2],\\n        text: cap[3] || ''\\n      });\\n      continue;\\n    }\\n\\n    // heading\\n    if (cap = this.rules.heading.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'heading',\\n        depth: cap[1].length,\\n        text: cap[2]\\n      });\\n      continue;\\n    }\\n\\n    // table no leading pipe (gfm)\\n    if (top && (cap = this.rules.nptable.exec(src))) {\\n      src = src.substring(cap[0].length);\\n\\n      item = {\\n        type: 'table',\\n        header: cap[1].replace(/^ *| *\\\\| *$/g, '').split(/ *\\\\| */),\\n        align: cap[2].replace(/^ *|\\\\| *$/g, '').split(/ *\\\\| */),\\n        cells: cap[3].replace(/\\\\n$/, '').split('\\\\n')\\n      };\\n\\n      for (i = 0; i < item.align.length; i++) {\\n        if (/^ *-+: *$/.test(item.align[i])) {\\n          item.align[i] = 'right';\\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\\n          item.align[i] = 'center';\\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\\n          item.align[i] = 'left';\\n        } else {\\n          item.align[i] = null;\\n        }\\n      }\\n\\n      for (i = 0; i < item.cells.length; i++) {\\n        item.cells[i] = item.cells[i].split(/ *\\\\| */);\\n      }\\n\\n      this.tokens.push(item);\\n\\n      continue;\\n    }\\n\\n    // hr\\n    if (cap = this.rules.hr.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'hr'\\n      });\\n      continue;\\n    }\\n\\n    // blockquote\\n    if (cap = this.rules.blockquote.exec(src)) {\\n      src = src.substring(cap[0].length);\\n\\n      this.tokens.push({\\n        type: 'blockquote_start'\\n      });\\n\\n      cap = cap[0].replace(/^ *> ?/gm, '');\\n\\n      // Pass `top` to keep the current\\n      // \\\"toplevel\\\" state. This is exactly\\n      // how markdown.pl works.\\n      this.token(cap, top);\\n\\n      this.tokens.push({\\n        type: 'blockquote_end'\\n      });\\n\\n      continue;\\n    }\\n\\n    // list\\n    if (cap = this.rules.list.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      bull = cap[2];\\n      isordered = bull.length > 1;\\n\\n      this.tokens.push({\\n        type: 'list_start',\\n        ordered: isordered,\\n        start: isordered ? +bull : ''\\n      });\\n\\n      // Get each top-level item.\\n      cap = cap[0].match(this.rules.item);\\n\\n      next = false;\\n      l = cap.length;\\n      i = 0;\\n\\n      for (; i < l; i++) {\\n        item = cap[i];\\n\\n        // Remove the list item's bullet\\n        // so it is seen as the next token.\\n        space = item.length;\\n        item = item.replace(/^ *([*+-]|\\\\d+\\\\.) +/, '');\\n\\n        // Outdent whatever the\\n        // list item contains. Hacky.\\n        if (~item.indexOf('\\\\n ')) {\\n          space -= item.length;\\n          item = !this.options.pedantic\\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\\n            : item.replace(/^ {1,4}/gm, '');\\n        }\\n\\n        // Determine whether the next list item belongs here.\\n        // Backpedal if it does not belong in this list.\\n        if (this.options.smartLists && i !== l - 1) {\\n          b = block.bullet.exec(cap[i + 1])[0];\\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\\n            src = cap.slice(i + 1).join('\\\\n') + src;\\n            i = l - 1;\\n          }\\n        }\\n\\n        // Determine whether item is loose or not.\\n        // Use: /(^|\\\\n)(?! )[^\\\\n]+\\\\n\\\\n(?!\\\\s*$)/\\n        // for discount behavior.\\n        loose = next || /\\\\n\\\\n(?!\\\\s*$)/.test(item);\\n        if (i !== l - 1) {\\n          next = item.charAt(item.length - 1) === '\\\\n';\\n          if (!loose) loose = next;\\n        }\\n\\n        this.tokens.push({\\n          type: loose\\n            ? 'loose_item_start'\\n            : 'list_item_start'\\n        });\\n\\n        // Recurse.\\n        this.token(item, false);\\n\\n        this.tokens.push({\\n          type: 'list_item_end'\\n        });\\n      }\\n\\n      this.tokens.push({\\n        type: 'list_end'\\n      });\\n\\n      continue;\\n    }\\n\\n    // html\\n    if (cap = this.rules.html.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: this.options.sanitize\\n          ? 'paragraph'\\n          : 'html',\\n        pre: !this.options.sanitizer\\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\\n        text: cap[0]\\n      });\\n      continue;\\n    }\\n\\n    // def\\n    if (top && (cap = this.rules.def.exec(src))) {\\n      src = src.substring(cap[0].length);\\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\\n      tag = cap[1].toLowerCase();\\n      if (!this.tokens.links[tag]) {\\n        this.tokens.links[tag] = {\\n          href: cap[2],\\n          title: cap[3]\\n        };\\n      }\\n      continue;\\n    }\\n\\n    // table (gfm)\\n    if (top && (cap = this.rules.table.exec(src))) {\\n      src = src.substring(cap[0].length);\\n\\n      item = {\\n        type: 'table',\\n        header: cap[1].replace(/^ *| *\\\\| *$/g, '').split(/ *\\\\| */),\\n        align: cap[2].replace(/^ *|\\\\| *$/g, '').split(/ *\\\\| */),\\n        cells: cap[3].replace(/(?: *\\\\| *)?\\\\n$/, '').split('\\\\n')\\n      };\\n\\n      for (i = 0; i < item.align.length; i++) {\\n        if (/^ *-+: *$/.test(item.align[i])) {\\n          item.align[i] = 'right';\\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\\n          item.align[i] = 'center';\\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\\n          item.align[i] = 'left';\\n        } else {\\n          item.align[i] = null;\\n        }\\n      }\\n\\n      for (i = 0; i < item.cells.length; i++) {\\n        item.cells[i] = item.cells[i]\\n          .replace(/^ *\\\\| *| *\\\\| *$/g, '')\\n          .split(/ *\\\\| */);\\n      }\\n\\n      this.tokens.push(item);\\n\\n      continue;\\n    }\\n\\n    // lheading\\n    if (cap = this.rules.lheading.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'heading',\\n        depth: cap[2] === '=' ? 1 : 2,\\n        text: cap[1]\\n      });\\n      continue;\\n    }\\n\\n    // top-level paragraph\\n    if (top && (cap = this.rules.paragraph.exec(src))) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'paragraph',\\n        text: cap[1].charAt(cap[1].length - 1) === '\\\\n'\\n          ? cap[1].slice(0, -1)\\n          : cap[1]\\n      });\\n      continue;\\n    }\\n\\n    // text\\n    if (cap = this.rules.text.exec(src)) {\\n      // Top-level should never reach here.\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'text',\\n        text: cap[0]\\n      });\\n      continue;\\n    }\\n\\n    if (src) {\\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\\n    }\\n  }\\n\\n  return this.tokens;\\n};\\n\\n/**\\n * Inline-Level Grammar\\n */\\n\\nvar inline = {\\n  escape: /^\\\\\\\\([\\\\\\\\`*{}\\\\[\\\\]()#+\\\\-.!_>])/,\\n  autolink: /^<(scheme:[^\\\\s\\\\x00-\\\\x1f<>]*|email)>/,\\n  url: noop,\\n  tag: /^\\u003c!--[\\\\s\\\\S]*?--\\u003e|^<\\\\/?[a-zA-Z0-9\\\\-]+(?:\\\"[^\\\"]*\\\"|'[^']*'|\\\\s[^<'\\\">\\\\/\\\\s]*)*?\\\\/?>/,\\n  link: /^!?\\\\[(inside)\\\\]\\\\(href\\\\)/,\\n  reflink: /^!?\\\\[(inside)\\\\]\\\\s*\\\\[([^\\\\]]*)\\\\]/,\\n  nolink: /^!?\\\\[((?:\\\\[[^\\\\[\\\\]]*\\\\]|\\\\\\\\[\\\\[\\\\]]|[^\\\\[\\\\]])*)\\\\]/,\\n  strong: /^__([\\\\s\\\\S]+?)__(?!_)|^\\\\*\\\\*([\\\\s\\\\S]+?)\\\\*\\\\*(?!\\\\*)/,\\n  em: /^_([^\\\\s_](?:[^_]|__)+?[^\\\\s_])_\\\\b|^\\\\*((?:\\\\*\\\\*|[^*])+?)\\\\*(?!\\\\*)/,\\n  code: /^(`+)\\\\s*([\\\\s\\\\S]*?[^`]?)\\\\s*\\\\1(?!`)/,\\n  br: /^ {2,}\\\\n(?!\\\\s*$)/,\\n  del: noop,\\n  text: /^[\\\\s\\\\S]+?(?=[\\\\\\\\<!\\\\[`*]|\\\\b_| {2,}\\\\n|$)/\\n};\\n\\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\\n\\ninline.autolink = edit(inline.autolink)\\n  .replace('scheme', inline._scheme)\\n  .replace('email', inline._email)\\n  .getRegex()\\n\\ninline._inside = /(?:\\\\[[^\\\\[\\\\]]*\\\\]|\\\\\\\\[\\\\[\\\\]]|[^\\\\[\\\\]]|\\\\](?=[^\\\\[]*\\\\]))*/;\\ninline._href = /\\\\s*<?([\\\\s\\\\S]*?)>?(?:\\\\s+['\\\"]([\\\\s\\\\S]*?)['\\\"])?\\\\s*/;\\n\\ninline.link = edit(inline.link)\\n  .replace('inside', inline._inside)\\n  .replace('href', inline._href)\\n  .getRegex();\\n\\ninline.reflink = edit(inline.reflink)\\n  .replace('inside', inline._inside)\\n  .getRegex();\\n\\n/**\\n * Normal Inline Grammar\\n */\\n\\ninline.normal = merge({}, inline);\\n\\n/**\\n * Pedantic Inline Grammar\\n */\\n\\ninline.pedantic = merge({}, inline.normal, {\\n  strong: /^__(?=\\\\S)([\\\\s\\\\S]*?\\\\S)__(?!_)|^\\\\*\\\\*(?=\\\\S)([\\\\s\\\\S]*?\\\\S)\\\\*\\\\*(?!\\\\*)/,\\n  em: /^_(?=\\\\S)([\\\\s\\\\S]*?\\\\S)_(?!_)|^\\\\*(?=\\\\S)([\\\\s\\\\S]*?\\\\S)\\\\*(?!\\\\*)/\\n});\\n\\n/**\\n * GFM Inline Grammar\\n */\\n\\ninline.gfm = merge({}, inline.normal, {\\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\\n  url: edit(/^((?:ftp|https?):\\\\/\\\\/|www\\\\.)(?:[a-zA-Z0-9\\\\-]+\\\\.?)+[^\\\\s<]*|^email/)\\n    .replace('email', inline._email)\\n    .getRegex(),\\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\\\([^)]*\\\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\\n  del: /^~~(?=\\\\S)([\\\\s\\\\S]*?\\\\S)~~/,\\n  text: edit(inline.text)\\n    .replace(']|', '~]|')\\n    .replace('|', '|https?://|ftp://|www\\\\\\\\.|[a-zA-Z0-9.!#$%&\\\\'*+/=?^_`{\\\\\\\\|}~-]+@|')\\n    .getRegex()\\n});\\n\\n/**\\n * GFM + Line Breaks Inline Grammar\\n */\\n\\ninline.breaks = merge({}, inline.gfm, {\\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\\n});\\n\\n/**\\n * Inline Lexer & Compiler\\n */\\n\\nfunction InlineLexer(links, options) {\\n  this.options = options || marked.defaults;\\n  this.links = links;\\n  this.rules = inline.normal;\\n  this.renderer = this.options.renderer || new Renderer();\\n  this.renderer.options = this.options;\\n\\n  if (!this.links) {\\n    throw new Error('Tokens array requires a `links` property.');\\n  }\\n\\n  if (this.options.gfm) {\\n    if (this.options.breaks) {\\n      this.rules = inline.breaks;\\n    } else {\\n      this.rules = inline.gfm;\\n    }\\n  } else if (this.options.pedantic) {\\n    this.rules = inline.pedantic;\\n  }\\n}\\n\\n/**\\n * Expose Inline Rules\\n */\\n\\nInlineLexer.rules = inline;\\n\\n/**\\n * Static Lexing/Compiling Method\\n */\\n\\nInlineLexer.output = function(src, links, options) {\\n  var inline = new InlineLexer(links, options);\\n  return inline.output(src);\\n};\\n\\n/**\\n * Lexing/Compiling\\n */\\n\\nInlineLexer.prototype.output = function(src) {\\n  var out = '',\\n      link,\\n      text,\\n      href,\\n      cap;\\n\\n  while (src) {\\n    // escape\\n    if (cap = this.rules.escape.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += cap[1];\\n      continue;\\n    }\\n\\n    // autolink\\n    if (cap = this.rules.autolink.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      if (cap[2] === '@') {\\n        text = escape(this.mangle(cap[1]));\\n        href = 'mailto:' + text;\\n      } else {\\n        text = escape(cap[1]);\\n        href = text;\\n      }\\n      out += this.renderer.link(href, null, text);\\n      continue;\\n    }\\n\\n    // url (gfm)\\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\\n      src = src.substring(cap[0].length);\\n      if (cap[2] === '@') {\\n        text = escape(cap[0]);\\n        href = 'mailto:' + text;\\n      } else {\\n        text = escape(cap[0]);\\n        if (cap[1] === 'www.') {\\n          href = 'http://' + text;\\n        } else {\\n          href = text;\\n        }\\n      }\\n      out += this.renderer.link(href, null, text);\\n      continue;\\n    }\\n\\n    // tag\\n    if (cap = this.rules.tag.exec(src)) {\\n      if (!this.inLink && /^<a /i.test(cap[0])) {\\n        this.inLink = true;\\n      } else if (this.inLink && /^<\\\\/a>/i.test(cap[0])) {\\n        this.inLink = false;\\n      }\\n      src = src.substring(cap[0].length);\\n      out += this.options.sanitize\\n        ? this.options.sanitizer\\n          ? this.options.sanitizer(cap[0])\\n          : escape(cap[0])\\n        : cap[0]\\n      continue;\\n    }\\n\\n    // link\\n    if (cap = this.rules.link.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.inLink = true;\\n      out += this.outputLink(cap, {\\n        href: cap[2],\\n        title: cap[3]\\n      });\\n      this.inLink = false;\\n      continue;\\n    }\\n\\n    // reflink, nolink\\n    if ((cap = this.rules.reflink.exec(src))\\n        || (cap = this.rules.nolink.exec(src))) {\\n      src = src.substring(cap[0].length);\\n      link = (cap[2] || cap[1]).replace(/\\\\s+/g, ' ');\\n      link = this.links[link.toLowerCase()];\\n      if (!link || !link.href) {\\n        out += cap[0].charAt(0);\\n        src = cap[0].substring(1) + src;\\n        continue;\\n      }\\n      this.inLink = true;\\n      out += this.outputLink(cap, link);\\n      this.inLink = false;\\n      continue;\\n    }\\n\\n    // strong\\n    if (cap = this.rules.strong.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\\n      continue;\\n    }\\n\\n    // em\\n    if (cap = this.rules.em.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\\n      continue;\\n    }\\n\\n    // code\\n    if (cap = this.rules.code.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\\n      continue;\\n    }\\n\\n    // br\\n    if (cap = this.rules.br.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.br();\\n      continue;\\n    }\\n\\n    // del (gfm)\\n    if (cap = this.rules.del.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.del(this.output(cap[1]));\\n      continue;\\n    }\\n\\n    // text\\n    if (cap = this.rules.text.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\\n      continue;\\n    }\\n\\n    if (src) {\\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\\n    }\\n  }\\n\\n  return out;\\n};\\n\\n/**\\n * Compile Link\\n */\\n\\nInlineLexer.prototype.outputLink = function(cap, link) {\\n  var href = escape(link.href),\\n      title = link.title ? escape(link.title) : null;\\n\\n  return cap[0].charAt(0) !== '!'\\n    ? this.renderer.link(href, title, this.output(cap[1]))\\n    : this.renderer.image(href, title, escape(cap[1]));\\n};\\n\\n/**\\n * Smartypants Transformations\\n */\\n\\nInlineLexer.prototype.smartypants = function(text) {\\n  if (!this.options.smartypants) return text;\\n  return text\\n    // em-dashes\\n    .replace(/---/g, '\\\\u2014')\\n    // en-dashes\\n    .replace(/--/g, '\\\\u2013')\\n    // opening singles\\n    .replace(/(^|[-\\\\u2014/(\\\\[{\\\"\\\\s])'/g, '$1\\\\u2018')\\n    // closing singles & apostrophes\\n    .replace(/'/g, '\\\\u2019')\\n    // opening doubles\\n    .replace(/(^|[-\\\\u2014/(\\\\[{\\\\u2018\\\\s])\\\"/g, '$1\\\\u201c')\\n    // closing doubles\\n    .replace(/\\\"/g, '\\\\u201d')\\n    // ellipses\\n    .replace(/\\\\.{3}/g, '\\\\u2026');\\n};\\n\\n/**\\n * Mangle Links\\n */\\n\\nInlineLexer.prototype.mangle = function(text) {\\n  if (!this.options.mangle) return text;\\n  var out = '',\\n      l = text.length,\\n      i = 0,\\n      ch;\\n\\n  for (; i < l; i++) {\\n    ch = text.charCodeAt(i);\\n    if (Math.random() > 0.5) {\\n      ch = 'x' + ch.toString(16);\\n    }\\n    out += '&#' + ch + ';';\\n  }\\n\\n  return out;\\n};\\n\\n/**\\n * Renderer\\n */\\n\\nfunction Renderer(options) {\\n  this.options = options || {};\\n}\\n\\nRenderer.prototype.code = function(code, lang, escaped) {\\n  if (this.options.highlight) {\\n    var out = this.options.highlight(code, lang);\\n    if (out != null && out !== code) {\\n      escaped = true;\\n      code = out;\\n    }\\n  }\\n\\n  if (!lang) {\\n    return '<pre><code>'\\n      + (escaped ? code : escape(code, true))\\n      + '\\\\n</code></pre>';\\n  }\\n\\n  return '<pre><code class=\\\"'\\n    + this.options.langPrefix\\n    + escape(lang, true)\\n    + '\\\">'\\n    + (escaped ? code : escape(code, true))\\n    + '\\\\n</code></pre>\\\\n';\\n};\\n\\nRenderer.prototype.blockquote = function(quote) {\\n  return '<blockquote>\\\\n' + quote + '</blockquote>\\\\n';\\n};\\n\\nRenderer.prototype.html = function(html) {\\n  return html;\\n};\\n\\nRenderer.prototype.heading = function(text, level, raw) {\\n  return '<h'\\n    + level\\n    + ' id=\\\"'\\n    + this.options.headerPrefix\\n    + raw.toLowerCase().replace(/[^\\\\w]+/g, '-')\\n    + '\\\">'\\n    + text\\n    + '</h'\\n    + level\\n    + '>\\\\n';\\n};\\n\\nRenderer.prototype.hr = function() {\\n  return this.options.xhtml ? '<hr/>\\\\n' : '<hr>\\\\n';\\n};\\n\\nRenderer.prototype.list = function(body, ordered, start) {\\n  var type = ordered ? 'ol' : 'ul',\\n      startatt = (ordered && start !== 1) ? (' start=\\\"' + start + '\\\"') : '';\\n  return '<' + type + startatt + '>\\\\n' + body + '</' + type + '>\\\\n';\\n};\\n\\nRenderer.prototype.listitem = function(text) {\\n  return '<li>' + text + '</li>\\\\n';\\n};\\n\\nRenderer.prototype.paragraph = function(text) {\\n  return '<p>' + text + '</p>\\\\n';\\n};\\n\\nRenderer.prototype.table = function(header, body) {\\n  return '<table>\\\\n'\\n    + '<thead>\\\\n'\\n    + header\\n    + '</thead>\\\\n'\\n    + '<tbody>\\\\n'\\n    + body\\n    + '</tbody>\\\\n'\\n    + '</table>\\\\n';\\n};\\n\\nRenderer.prototype.tablerow = function(content) {\\n  return '<tr>\\\\n' + content + '</tr>\\\\n';\\n};\\n\\nRenderer.prototype.tablecell = function(content, flags) {\\n  var type = flags.header ? 'th' : 'td';\\n  var tag = flags.align\\n    ? '<' + type + ' style=\\\"text-align:' + flags.align + '\\\">'\\n    : '<' + type + '>';\\n  return tag + content + '</' + type + '>\\\\n';\\n};\\n\\n// span level renderer\\nRenderer.prototype.strong = function(text) {\\n  return '<strong>' + text + '</strong>';\\n};\\n\\nRenderer.prototype.em = function(text) {\\n  return '<em>' + text + '</em>';\\n};\\n\\nRenderer.prototype.codespan = function(text) {\\n  return '<code>' + text + '</code>';\\n};\\n\\nRenderer.prototype.br = function() {\\n  return this.options.xhtml ? '<br/>' : '<br>';\\n};\\n\\nRenderer.prototype.del = function(text) {\\n  return '<del>' + text + '</del>';\\n};\\n\\nRenderer.prototype.link = function(href, title, text) {\\n  if (this.options.sanitize) {\\n    try {\\n      var prot = decodeURIComponent(unescape(href))\\n        .replace(/[^\\\\w:]/g, '')\\n        .toLowerCase();\\n    } catch (e) {\\n      return text;\\n    }\\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\\n      return text;\\n    }\\n  }\\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\\n    href = resolveUrl(this.options.baseUrl, href);\\n  }\\n  var out = '<a href=\\\"' + href + '\\\"';\\n  if (title) {\\n    out += ' title=\\\"' + title + '\\\"';\\n  }\\n  out += '>' + text + '</a>';\\n  return out;\\n};\\n\\nRenderer.prototype.image = function(href, title, text) {\\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\\n    href = resolveUrl(this.options.baseUrl, href);\\n  }\\n  var out = '<img src=\\\"' + href + '\\\" alt=\\\"' + text + '\\\"';\\n  if (title) {\\n    out += ' title=\\\"' + title + '\\\"';\\n  }\\n  out += this.options.xhtml ? '/>' : '>';\\n  return out;\\n};\\n\\nRenderer.prototype.text = function(text) {\\n  return text;\\n};\\n\\n/**\\n * TextRenderer\\n * returns only the textual part of the token\\n */\\n\\nfunction TextRenderer() {}\\n\\n// no need for block level renderers\\n\\nTextRenderer.prototype.strong =\\nTextRenderer.prototype.em =\\nTextRenderer.prototype.codespan =\\nTextRenderer.prototype.del =\\nTextRenderer.prototype.text = function (text) {\\n  return text;\\n}\\n\\nTextRenderer.prototype.link =\\nTextRenderer.prototype.image = function(href, title, text) {\\n  return '' + text;\\n}\\n\\nTextRenderer.prototype.br = function() {\\n  return '';\\n}\\n\\n/**\\n * Parsing & Compiling\\n */\\n\\nfunction Parser(options) {\\n  this.tokens = [];\\n  this.token = null;\\n  this.options = options || marked.defaults;\\n  this.options.renderer = this.options.renderer || new Renderer();\\n  this.renderer = this.options.renderer;\\n  this.renderer.options = this.options;\\n}\\n\\n/**\\n * Static Parse Method\\n */\\n\\nParser.parse = function(src, options) {\\n  var parser = new Parser(options);\\n  return parser.parse(src);\\n};\\n\\n/**\\n * Parse Loop\\n */\\n\\nParser.prototype.parse = function(src) {\\n  this.inline = new InlineLexer(src.links, this.options);\\n  // use an InlineLexer with a TextRenderer to extract pure text\\n  this.inlineText = new InlineLexer(\\n    src.links,\\n    merge({}, this.options, {renderer: new TextRenderer()})\\n  );\\n  this.tokens = src.reverse();\\n\\n  var out = '';\\n  while (this.next()) {\\n    out += this.tok();\\n  }\\n\\n  return out;\\n};\\n\\n/**\\n * Next Token\\n */\\n\\nParser.prototype.next = function() {\\n  return this.token = this.tokens.pop();\\n};\\n\\n/**\\n * Preview Next Token\\n */\\n\\nParser.prototype.peek = function() {\\n  return this.tokens[this.tokens.length - 1] || 0;\\n};\\n\\n/**\\n * Parse Text Tokens\\n */\\n\\nParser.prototype.parseText = function() {\\n  var body = this.token.text;\\n\\n  while (this.peek().type === 'text') {\\n    body += '\\\\n' + this.next().text;\\n  }\\n\\n  return this.inline.output(body);\\n};\\n\\n/**\\n * Parse Current Token\\n */\\n\\nParser.prototype.tok = function() {\\n  switch (this.token.type) {\\n    case 'space': {\\n      return '';\\n    }\\n    case 'hr': {\\n      return this.renderer.hr();\\n    }\\n    case 'heading': {\\n      return this.renderer.heading(\\n        this.inline.output(this.token.text),\\n        this.token.depth,\\n        unescape(this.inlineText.output(this.token.text)));\\n    }\\n    case 'code': {\\n      return this.renderer.code(this.token.text,\\n        this.token.lang,\\n        this.token.escaped);\\n    }\\n    case 'table': {\\n      var header = '',\\n          body = '',\\n          i,\\n          row,\\n          cell,\\n          j;\\n\\n      // header\\n      cell = '';\\n      for (i = 0; i < this.token.header.length; i++) {\\n        cell += this.renderer.tablecell(\\n          this.inline.output(this.token.header[i]),\\n          { header: true, align: this.token.align[i] }\\n        );\\n      }\\n      header += this.renderer.tablerow(cell);\\n\\n      for (i = 0; i < this.token.cells.length; i++) {\\n        row = this.token.cells[i];\\n\\n        cell = '';\\n        for (j = 0; j < row.length; j++) {\\n          cell += this.renderer.tablecell(\\n            this.inline.output(row[j]),\\n            { header: false, align: this.token.align[j] }\\n          );\\n        }\\n\\n        body += this.renderer.tablerow(cell);\\n      }\\n      return this.renderer.table(header, body);\\n    }\\n    case 'blockquote_start': {\\n      body = '';\\n\\n      while (this.next().type !== 'blockquote_end') {\\n        body += this.tok();\\n      }\\n\\n      return this.renderer.blockquote(body);\\n    }\\n    case 'list_start': {\\n      body = '';\\n      var ordered = this.token.ordered,\\n          start = this.token.start;\\n\\n      while (this.next().type !== 'list_end') {\\n        body += this.tok();\\n      }\\n\\n      return this.renderer.list(body, ordered, start);\\n    }\\n    case 'list_item_start': {\\n      body = '';\\n\\n      while (this.next().type !== 'list_item_end') {\\n        body += this.token.type === 'text'\\n          ? this.parseText()\\n          : this.tok();\\n      }\\n\\n      return this.renderer.listitem(body);\\n    }\\n    case 'loose_item_start': {\\n      body = '';\\n\\n      while (this.next().type !== 'list_item_end') {\\n        body += this.tok();\\n      }\\n\\n      return this.renderer.listitem(body);\\n    }\\n    case 'html': {\\n      var html = !this.token.pre && !this.options.pedantic\\n        ? this.inline.output(this.token.text)\\n        : this.token.text;\\n      return this.renderer.html(html);\\n    }\\n    case 'paragraph': {\\n      return this.renderer.paragraph(this.inline.output(this.token.text));\\n    }\\n    case 'text': {\\n      return this.renderer.paragraph(this.parseText());\\n    }\\n  }\\n};\\n\\n/**\\n * Helpers\\n */\\n\\nfunction escape(html, encode) {\\n  return html\\n    .replace(!encode ? /&(?!#?\\\\w+;)/g : /&/g, '&amp;')\\n    .replace(/</g, '&lt;')\\n    .replace(/>/g, '&gt;')\\n    .replace(/\\\"/g, '&quot;')\\n    .replace(/'/g, '&#39;');\\n}\\n\\nfunction unescape(html) {\\n  // explicitly match decimal, hex, and named HTML entities\\n  return html.replace(/&(#(?:\\\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\\\w+));?/ig, function(_, n) {\\n    n = n.toLowerCase();\\n    if (n === 'colon') return ':';\\n    if (n.charAt(0) === '#') {\\n      return n.charAt(1) === 'x'\\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\\n        : String.fromCharCode(+n.substring(1));\\n    }\\n    return '';\\n  });\\n}\\n\\nfunction edit(regex, opt) {\\n  regex = regex.source;\\n  opt = opt || '';\\n  return {\\n    replace: function(name, val) {\\n      val = val.source || val;\\n      val = val.replace(/(^|[^\\\\[])\\\\^/g, '$1');\\n      regex = regex.replace(name, val);\\n      return this;\\n    },\\n    getRegex: function() {\\n      return new RegExp(regex, opt);\\n    }\\n  };\\n}\\n\\nfunction resolveUrl(base, href) {\\n  if (!baseUrls[' ' + base]) {\\n    // we can ignore everything in base after the last slash of its path component,\\n    // but we might need to add _that_\\n    // https://tools.ietf.org/html/rfc3986#section-3\\n    if (/^[^:]+:\\\\/*[^/]*$/.test(base)) {\\n      baseUrls[' ' + base] = base + '/';\\n    } else {\\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\\n    }\\n  }\\n  base = baseUrls[' ' + base];\\n\\n  if (href.slice(0, 2) === '//') {\\n    return base.replace(/:[\\\\s\\\\S]*/, ':') + href;\\n  } else if (href.charAt(0) === '/') {\\n    return base.replace(/(:\\\\/*[^/]*)[\\\\s\\\\S]*/, '$1') + href;\\n  } else {\\n    return base + href;\\n  }\\n}\\nvar baseUrls = {};\\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\\n\\nfunction noop() {}\\nnoop.exec = noop;\\n\\nfunction merge(obj) {\\n  var i = 1,\\n      target,\\n      key;\\n\\n  for (; i < arguments.length; i++) {\\n    target = arguments[i];\\n    for (key in target) {\\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\\n        obj[key] = target[key];\\n      }\\n    }\\n  }\\n\\n  return obj;\\n}\\n\\n/**\\n * Marked\\n */\\n\\nfunction marked(src, opt, callback) {\\n  // throw error in case of non string input\\n  if (typeof src === 'undefined' || src === null) {\\n    throw new Error('marked(): input parameter is undefined or null');\\n  }\\n  if (typeof src !== 'string') {\\n    throw new Error('marked(): input parameter is of type '\\n      + Object.prototype.toString.call(src) + ', string expected');\\n  }\\n\\n  if (callback || typeof opt === 'function') {\\n    if (!callback) {\\n      callback = opt;\\n      opt = null;\\n    }\\n\\n    opt = merge({}, marked.defaults, opt || {});\\n\\n    var highlight = opt.highlight,\\n        tokens,\\n        pending,\\n        i = 0;\\n\\n    try {\\n      tokens = Lexer.lex(src, opt)\\n    } catch (e) {\\n      return callback(e);\\n    }\\n\\n    pending = tokens.length;\\n\\n    var done = function(err) {\\n      if (err) {\\n        opt.highlight = highlight;\\n        return callback(err);\\n      }\\n\\n      var out;\\n\\n      try {\\n        out = Parser.parse(tokens, opt);\\n      } catch (e) {\\n        err = e;\\n      }\\n\\n      opt.highlight = highlight;\\n\\n      return err\\n        ? callback(err)\\n        : callback(null, out);\\n    };\\n\\n    if (!highlight || highlight.length < 3) {\\n      return done();\\n    }\\n\\n    delete opt.highlight;\\n\\n    if (!pending) return done();\\n\\n    for (; i < tokens.length; i++) {\\n      (function(token) {\\n        if (token.type !== 'code') {\\n          return --pending || done();\\n        }\\n        return highlight(token.text, token.lang, function(err, code) {\\n          if (err) return done(err);\\n          if (code == null || code === token.text) {\\n            return --pending || done();\\n          }\\n          token.text = code;\\n          token.escaped = true;\\n          --pending || done();\\n        });\\n      })(tokens[i]);\\n    }\\n\\n    return;\\n  }\\n  try {\\n    if (opt) opt = merge({}, marked.defaults, opt);\\n    return Parser.parse(Lexer.lex(src, opt), opt);\\n  } catch (e) {\\n    e.message += '\\\\nPlease report this to https://github.com/markedjs/marked.';\\n    if ((opt || marked.defaults).silent) {\\n      return '<p>An error occurred:</p><pre>'\\n        + escape(e.message + '', true)\\n        + '</pre>';\\n    }\\n    throw e;\\n  }\\n}\\n\\n/**\\n * Options\\n */\\n\\nmarked.options =\\nmarked.setOptions = function(opt) {\\n  merge(marked.defaults, opt);\\n  return marked;\\n};\\n\\nmarked.defaults = {\\n  gfm: true,\\n  tables: true,\\n  breaks: false,\\n  pedantic: false,\\n  sanitize: false,\\n  sanitizer: null,\\n  mangle: true,\\n  smartLists: false,\\n  silent: false,\\n  highlight: null,\\n  langPrefix: 'lang-',\\n  smartypants: false,\\n  headerPrefix: '',\\n  renderer: new Renderer(),\\n  xhtml: false,\\n  baseUrl: null\\n};\\n\\n/**\\n * Expose\\n */\\n\\nmarked.Parser = Parser;\\nmarked.parser = Parser.parse;\\n\\nmarked.Renderer = Renderer;\\nmarked.TextRenderer = TextRenderer;\\n\\nmarked.Lexer = Lexer;\\nmarked.lexer = Lexer.lex;\\n\\nmarked.InlineLexer = InlineLexer;\\nmarked.inlineLexer = InlineLexer.output;\\n\\nmarked.parse = marked;\\n\\nif (typeof module !== 'undefined' && typeof exports === 'object') {\\n  module.exports = marked;\\n} else if (typeof define === 'function' && define.amd) {\\n  define(function() { return marked; });\\n} else {\\n  root.marked = marked;\\n}\\n})(this || (typeof window !== 'undefined' ? window : global));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"root\",\"Lexer\",\"options\",\"tokens\",\"links\",\"marked\",\"defaults\",\"rules\",\"block\",\"normal\",\"gfm\",\"tables\",\"InlineLexer\",\"inline\",\"renderer\",\"Renderer\",\"Error\",\"breaks\",\"pedantic\",\"TextRenderer\",\"Parser\",\"token\",\"escape\",\"html\",\"encode\",\"replace\",\"unescape\",\"_\",\"n\",\"toLowerCase\",\"charAt\",\"String\",\"fromCharCode\",\"parseInt\",\"substring\",\"edit\",\"regex\",\"opt\",\"source\",\"name\",\"val\",\"getRegex\",\"RegExp\",\"resolveUrl\",\"base\",\"href\",\"baseUrls\",\"test\",\"slice\",\"noop\",\"merge\",\"obj\",\"i\",\"target\",\"key\",\"arguments\",\"length\",\"Object\",\"prototype\",\"hasOwnProperty\",\"call\",\"src\",\"callback\",\"toString\",\"highlight\",\"lex\",\"e\",\"pending\",\"done\",\"err\",\"out\",\"parse\",\"type\",\"text\",\"lang\",\"code\",\"escaped\",\"message\",\"silent\",\"newline\",\"fences\",\"hr\",\"heading\",\"nptable\",\"blockquote\",\"list\",\"def\",\"table\",\"lheading\",\"paragraph\",\"_label\",\"_title\",\"bullet\",\"item\",\"_tag\",\"Lexer.lex\",\"lexer\",\"Lexer.prototype.lex\",\"Lexer.prototype.token\",\"top\",\"next\",\"loose\",\"cap\",\"bull\",\"l\",\"exec\",\"push\",\"depth\",\"header\",\"split\",\"align\",\"cells\",\"isordered\",\"ordered\",\"start\",\"match\",\"space\",\"indexOf\",\"smartLists\",\"b\",\"join\",\"sanitize\",\"pre\",\"sanitizer\",\"tag\",\"title\",\"charCodeAt\",\"autolink\",\"url\",\"link\",\"reflink\",\"nolink\",\"strong\",\"em\",\"br\",\"del\",\"_scheme\",\"_email\",\"_inside\",\"_href\",\"_backpedal\",\"output\",\"InlineLexer.output\",\"InlineLexer.prototype.output\",\"mangle\",\"inLink\",\"outputLink\",\"codespan\",\"trim\",\"smartypants\",\"InlineLexer.prototype.outputLink\",\"image\",\"InlineLexer.prototype.smartypants\",\"InlineLexer.prototype.mangle\",\"ch\",\"Math\",\"random\",\"Renderer.prototype.code\",\"langPrefix\",\"Renderer.prototype.blockquote\",\"quote\",\"Renderer.prototype.html\",\"Renderer.prototype.heading\",\"level\",\"raw\",\"headerPrefix\",\"Renderer.prototype.hr\",\"xhtml\",\"Renderer.prototype.list\",\"body\",\"startatt\",\"listitem\",\"Renderer.prototype.listitem\",\"Renderer.prototype.paragraph\",\"Renderer.prototype.table\",\"tablerow\",\"Renderer.prototype.tablerow\",\"content\",\"tablecell\",\"Renderer.prototype.tablecell\",\"flags\",\"Renderer.prototype.strong\",\"Renderer.prototype.em\",\"Renderer.prototype.codespan\",\"Renderer.prototype.br\",\"Renderer.prototype.del\",\"Renderer.prototype.link\",\"prot\",\"decodeURIComponent\",\"baseUrl\",\"originIndependentUrl\",\"Renderer.prototype.image\",\"Renderer.prototype.text\",\"TextRenderer.prototype.text\",\"TextRenderer.prototype.image\",\"TextRenderer.prototype.br\",\"Parser.parse\",\"parser\",\"Parser.prototype.parse\",\"inlineText\",\"reverse\",\"tok\",\"Parser.prototype.next\",\"pop\",\"peek\",\"Parser.prototype.peek\",\"parseText\",\"Parser.prototype.parseText\",\"Parser.prototype.tok\",\"j\",\"cell\",\"row\",\"setOptions\",\"marked.setOptions\",\"inlineLexer\",\"define\",\"amd\",\"window\"]\n}\n"]