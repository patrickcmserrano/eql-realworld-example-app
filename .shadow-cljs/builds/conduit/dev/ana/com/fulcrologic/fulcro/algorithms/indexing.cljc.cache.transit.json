["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.algorithms.indexing');\ncom.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_ = (function com$fulcrologic$fulcro$algorithms$indexing$index_query_STAR_(prop__GT_classes,p__65901){\nvar map__65902 = p__65901;\nvar map__65902__$1 = (((((!((map__65902 == null))))?(((((map__65902.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65902.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65902):map__65902);\nvar ast = map__65902__$1;\nvar parent_component = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65902__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\nvar parent_children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65902__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nvar parent_key = com.fulcrologic.fulcro.components.class__GT_registry_key(parent_component);\nvar parent_children__$1 = cljs.core.seq(parent_children);\nvar update_index = (function (idx,k,c){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(idx,k,cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),c);\n});\nif(parent_children__$1){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (idx,p__65916){\nvar map__65917 = p__65916;\nvar map__65917__$1 = (((((!((map__65917 == null))))?(((((map__65917.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65917.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65917):map__65917);\nvar child_ast = map__65917__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65917__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar dispatch_key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65917__$1,new cljs.core.Keyword(null,\"dispatch-key\",\"dispatch-key\",733619510));\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65917__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nvar G__65920 = idx;\nvar G__65920__$1 = ((((cljs.core.vector_QMARK_(key)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(key)))))?update_index(G__65920,dispatch_key,parent_key):G__65920);\nvar G__65920__$2 = ((((cljs.core.vector_QMARK_(key)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.second(key)))))?update_index(G__65920__$1,key,parent_key):G__65920__$1);\nvar G__65920__$3 = (((key instanceof cljs.core.Keyword))?update_index(G__65920__$2,key,parent_key):G__65920__$2);\nif(cljs.core.seq(children)){\nreturn (com.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_.cljs$core$IFn$_invoke$arity$2(G__65920__$3,child_ast) : com.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_.call(null,G__65920__$3,child_ast));\n} else {\nreturn G__65920__$3;\n}\n}),prop__GT_classes,parent_children__$1);\n} else {\nreturn prop__GT_classes;\n}\n});\n/**\n * Create an index of the given component-annotated query. Returns a map from query keyword to the component\n *   class(es) that query for that keyword.\n */\ncom.fulcrologic.fulcro.algorithms.indexing.index_query = (function com$fulcrologic$fulcro$algorithms$indexing$index_query(query){\nvar ast = edn_query_language.core.query__GT_ast(query);\nreturn com.fulcrologic.fulcro.algorithms.indexing.index_query_STAR_(cljs.core.PersistentArrayMap.EMPTY,ast);\n});\n/**\n * Return a set of keywords that are in the top-level of the given AST\n */\ncom.fulcrologic.fulcro.algorithms.indexing.top_level_keys = (function com$fulcrologic$fulcro$algorithms$indexing$top_level_keys(ast){\nvar map__65935 = ast;\nvar map__65935__$1 = (((((!((map__65935 == null))))?(((((map__65935.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65935.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65935):map__65935);\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65935__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587)),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.keyword_QMARK_)),children);\n});\n/**\n * Returns a set of all of the keys that appear in link refs `[:k '_]` in the entire ast.\n */\ncom.fulcrologic.fulcro.algorithms.indexing.link_query_props = (function com$fulcrologic$fulcro$algorithms$indexing$link_query_props(p__65940){\nvar map__65941 = p__65940;\nvar map__65941__$1 = (((((!((map__65941 == null))))?(((((map__65941.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65941.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65941):map__65941);\nvar ast = map__65941__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65941__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar children = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65941__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nif(com.fulcrologic.fulcro.algorithms.denormalize.link_ref_QMARK_(key)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(clojure.set.union,cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core.first(key)]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.algorithms.indexing.link_query_props,children));\n} else {\nif(cljs.core.seq(children)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.set.union,cljs.core.map.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.algorithms.indexing.link_query_props,children));\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n\n}\n}\n});\n/**\n * Index the root query (see index-query) and side-effect the result (`prop->classes`) into the given app.\n *   This function assumes the `root-class` has already been supplied to the app (i.e. is has been mounted).\n */\ncom.fulcrologic.fulcro.algorithms.indexing.index_root_BANG_ = (function com$fulcrologic$fulcro$algorithms$indexing$index_root_BANG_(app){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.algorithms.indexing\",null,61,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"(Re)indexing application query for prop->classes\"], null);\n}),null)),null,369756791);\n\nvar map__65968 = app;\nvar map__65968__$1 = (((((!((map__65968 == null))))?(((((map__65968.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65968.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65968):map__65968);\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65968__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65968__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__65969 = cljs.core.deref(runtime_atom);\nvar map__65969__$1 = (((((!((map__65969 == null))))?(((((map__65969.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__65969.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__65969):map__65969);\nvar root_class = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__65969__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"root-class\",\"com.fulcrologic.fulcro.application/root-class\",-719803119));\nvar state_map = cljs.core.deref(state_atom);\nvar root_query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(root_class,state_map);\nvar ast = edn_query_language.core.query__GT_ast(root_query);\nvar prop__GT_classes = com.fulcrologic.fulcro.algorithms.indexing.index_query(root_query);\nvar idents_in_joins = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1(edn_query_language.core.ident_QMARK_),cljs.core.keys(prop__GT_classes));\nvar root_props = com.fulcrologic.fulcro.algorithms.indexing.top_level_keys(ast);\nvar linked_props = com.fulcrologic.fulcro.algorithms.indexing.link_query_props(ast);\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(runtime_atom,(function (s){\nreturn cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.assoc_in(s,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"root-props\",\"root-props\",-1015460595)], null),root_props),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"linked-props\",\"linked-props\",1547374714)], null),linked_props),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035)], null),idents_in_joins),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717)], null),prop__GT_classes);\n}));\n});\ncom.fulcrologic.fulcro.algorithms.indexing.index_component_STAR_ = (function com$fulcrologic$fulcro$algorithms$indexing$index_component_STAR_(runtime_state,instance,ident,cls){\nvar k = com.fulcrologic.fulcro.components.class__GT_registry_key(cls);\nvar G__65979 = runtime_state;\nvar G__65979__$1 = (cljs.core.truth_(k)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__65979,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),k], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),instance):G__65979);\nif(cljs.core.truth_(ident)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__65979__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224),ident], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),instance);\n} else {\nreturn G__65979__$1;\n}\n});\n/**\n * Add a component instance to the app index. This adds the component to the `class->components` and\n * `ident->components` indexes.\n */\ncom.fulcrologic.fulcro.algorithms.indexing.index_component_BANG_ = (function com$fulcrologic$fulcro$algorithms$indexing$index_component_BANG_(this$){\nvar map__66000 = com.fulcrologic.fulcro.components.any__GT_app(this$);\nvar map__66000__$1 = (((((!((map__66000 == null))))?(((((map__66000.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66000.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66000):map__66000);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66000__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar get_ident = com.fulcrologic.fulcro.components.component_options.cljs$core$IFn$_invoke$arity$variadic(this$,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ident\",\"ident\",-742346)], 0));\nvar ident = (cljs.core.truth_(get_ident)?(function (){var G__66003 = this$;\nvar G__66004 = com.fulcrologic.fulcro.components.props(this$);\nreturn (get_ident.cljs$core$IFn$_invoke$arity$2 ? get_ident.cljs$core$IFn$_invoke$arity$2(G__66003,G__66004) : get_ident.call(null,G__66003,G__66004));\n})():null);\nvar cls = com.fulcrologic.fulcro.components.react_type(this$);\nif(cljs.core.truth_(goog.DEBUG)){\nif(cljs.core.truth_(ident)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.algorithms.indexing\",null,100,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Indexing component \",ident], null);\n}),null)),null,-1228403756);\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4115__auto__ = ident;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn (!(edn_query_language.core.ident_QMARK_(ident)));\n} else {\nreturn and__4115__auto__;\n}\n})())){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.indexing\",null,102,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Component\",com.fulcrologic.fulcro.components.component_name(this$),\"supplied an invalid ident\",ident], null);\n}),null)),null,-1513781453);\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4115__auto__ = ident;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn (cljs.core.second(ident) == null);\n} else {\nreturn and__4115__auto__;\n}\n})())){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.algorithms.indexing\",null,104,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[\"component \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(com.fulcrologic.fulcro.components.component_name(this$)),\"'s ident (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ident),\") has a `nil` second element.\",\" This warning can be safely ignored if that is intended.\"].join('')], null);\n}),null)),null,-53610132);\n} else {\n}\n} else {\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(runtime_atom,com.fulcrologic.fulcro.algorithms.indexing.index_component_STAR_,this$,ident,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cls], 0));\n});\ncom.fulcrologic.fulcro.algorithms.indexing.drop_component_STAR_ = (function com$fulcrologic$fulcro$algorithms$indexing$drop_component_STAR_(runtime_state,instance,ident,cls){\nvar k = com.fulcrologic.fulcro.components.class__GT_registry_key(cls);\nvar G__66019 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(runtime_state,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919),k], null),cljs.core.disj,instance);\nif(cljs.core.truth_(ident)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__66019,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938),new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224),ident], null),cljs.core.disj,instance);\n} else {\nreturn G__66019;\n}\n});\n/**\n * Remove the component instance from the indexes. If ident is supplied it uses that, otherwise it gets the\n *   ident from the component itself.\n */\ncom.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_ = (function com$fulcrologic$fulcro$algorithms$indexing$drop_component_BANG_(var_args){\nvar G__66024 = arguments.length;\nswitch (G__66024) {\ncase 2:\nreturn com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (this$,ident){\nvar map__66027 = com.fulcrologic.fulcro.components.any__GT_app(this$);\nvar map__66027__$1 = (((((!((map__66027 == null))))?(((((map__66027.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66027.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66027):map__66027);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66027__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar cls = com.fulcrologic.fulcro.components.react_type(this$);\nif(cljs.core.truth_((function (){var and__4115__auto__ = goog.DEBUG;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn ident;\n} else {\nreturn and__4115__auto__;\n}\n})())){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.algorithms.indexing\",null,126,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Dropping component from index\",ident], null);\n}),null)),null,1199199399);\n} else {\n}\n\nif(cljs.core.truth_(ident)){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(runtime_atom,com.fulcrologic.fulcro.algorithms.indexing.drop_component_STAR_,this$,ident,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cls], 0));\n} else {\nreturn null;\n}\n}));\n\n(com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (this$){\nvar old_ident = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(this$);\nreturn com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$core$IFn$_invoke$arity$2(this$,old_ident);\n}));\n\n(com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * Mutation: re-index the application (typically after a dynamic query change).\n */\ncom.fulcrologic.fulcro.algorithms.indexing.reindex = com.fulcrologic.fulcro.mutations.__GT_Mutation(new cljs.core.Symbol(\"com.fulcrologic.fulcro.algorithms.indexing\",\"reindex\",\"com.fulcrologic.fulcro.algorithms.indexing/reindex\",1347487905,null));\n\ncom.fulcrologic.fulcro.mutations.mutate.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(\"com.fulcrologic.fulcro.algorithms.indexing\",\"reindex\",\"com.fulcrologic.fulcro.algorithms.indexing/reindex\",1347487905,null),(function (fulcro_mutation_env_symbol){\nvar _ = new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ast\",\"ast\",-860334068).cljs$core$IFn$_invoke$arity$1(fulcro_mutation_env_symbol));\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"action\",\"action\",-811238024),(function com$fulcrologic$fulcro$algorithms$indexing$action(p__66033){\nvar map__66034 = p__66033;\nvar map__66034__$1 = (((((!((map__66034 == null))))?(((((map__66034.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66034.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66034):map__66034);\nvar app = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66034__$1,new cljs.core.Keyword(null,\"app\",\"app\",-560961707));\nvar _STAR_after_render_STAR__orig_val__66043_66086 = com.fulcrologic.fulcro.components._STAR_after_render_STAR_;\nvar _STAR_after_render_STAR__temp_val__66044_66087 = true;\n(com.fulcrologic.fulcro.components._STAR_after_render_STAR_ = _STAR_after_render_STAR__temp_val__66044_66087);\n\ntry{if(cljs.core.truth_(app)){\ncom.fulcrologic.fulcro.algorithms.indexing.index_root_BANG_(app);\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.algorithms.indexing\",null,139,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unable to re-index root. App was not set in the mutation env.\"], null);\n}),null)),null,1751985801);\n}\n}finally {(com.fulcrologic.fulcro.components._STAR_after_render_STAR_ = _STAR_after_render_STAR__orig_val__66043_66086);\n}\nreturn null;\n}),new cljs.core.Keyword(null,\"result-action\",\"result-action\",-1254630246),(function (env){\nvar _STAR_after_render_STAR__orig_val__66048 = com.fulcrologic.fulcro.components._STAR_after_render_STAR_;\nvar _STAR_after_render_STAR__temp_val__66049 = true;\n(com.fulcrologic.fulcro.components._STAR_after_render_STAR_ = _STAR_after_render_STAR__temp_val__66049);\n\ntry{var temp__5735__auto__ = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(new cljs.core.Keyword(null,\"app\",\"app\",-560961707).cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"default-result-action!\",\"default-result-action!\",-622954374));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar default_action = temp__5735__auto__;\nreturn (default_action.cljs$core$IFn$_invoke$arity$1 ? default_action.cljs$core$IFn$_invoke$arity$1(env) : default_action.call(null,env));\n} else {\nreturn null;\n}\n}finally {(com.fulcrologic.fulcro.components._STAR_after_render_STAR_ = _STAR_after_render_STAR__orig_val__66048);\n}})], null);\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions that implement the query and component indexing. Fulcro keeps indexes of on-screen\n   components by ident and class. These enable Fulcro to find on-screen components for things\n   like targeted refresh. You are allowed to use the indexes to find components for whatever\n   purpose suits your needs (e.g. looking at component options).","~:file","com/fulcrologic/fulcro/algorithms/indexing.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",47],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.core.async.interop","~$cljs.core.async.interop","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$defmutation","~$com.fulcrologic.fulcro.mutations","~$>defn","~$com.fulcrologic.guardrails.core"],"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.algorithms.indexing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$edn-query-language.core","^X","^M","^M","~$log","~$taoensso.timbre","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^X","~$com.fulcrologic.fulcro.algorithms.denormalize","^12","~$cljs.core","^13","~$goog","^14","^W","^W","~$util","~$com.fulcrologic.fulcro.algorithms.do-not-use","^K","^K","~$encore","~$taoensso.encore","~$gw","^M","^10","^10","^Z","^Z","^18","^18","~$fdn","^12","^16","^16"],"~:seen",["^O",["~:require"]],"~:uses",["^ ","^J","^K","^L","^M"],"~:require-macros",["^ ","^M","^M","^Y","^Z","^[","^10","^13","^13","^K","^K","^17","^18","^19","^M","^10","^10","^Z","^Z","^18","^18"],"~:form",["~#list",["~$ns","^Q","Functions that implement the query and component indexing. Fulcro keeps indexes of on-screen\n   components by ident and class. These enable Fulcro to find on-screen components for things\n   like targeted refresh. You are allowed to use the indexes to find components for whatever\n   purpose suits your needs (e.g. looking at component options).",["^1@",["^1<",["^10","~:as","^["],["^16","^1B","^15"],["^12","^1B","^1:"],["^K","~:refer",["^J"]],["^M","^1B","^19","^1C",["^L"]],["^W","^1B","^V"],["^X","^1B","^11"],["^18","^1B","^17"],["^Z","^1B","^Y"]]]]],"~:flags",["^ ","^1<",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^10","^16","^12","^K","^M","^W","^X","^18","^Z"]],"^S","^Q","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/algorithms/indexing.cljc"],"~:compiled-at",1599160995499,"~:resource-name","com/fulcrologic/fulcro/algorithms/indexing.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.algorithms.indexing\n  \"Functions that implement the query and component indexing. Fulcro keeps indexes of on-screen\n   components by ident and class. These enable Fulcro to find on-screen components for things\n   like targeted refresh. You are allowed to use the indexes to find components for whatever\n   purpose suits your needs (e.g. looking at component options).\"\n  (:require\n    [com.fulcrologic.fulcro.components :as comp]\n    [com.fulcrologic.fulcro.algorithms.do-not-use :as util]\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [com.fulcrologic.fulcro.mutations :refer [defmutation]]\n    [com.fulcrologic.guardrails.core :as gw :refer [>defn]]\n    [clojure.set :as set]\n    [edn-query-language.core :as eql]\n    [taoensso.encore :as encore]\n    [taoensso.timbre :as log]))\n\n(defn- index-query*\n  [prop->classes {parent-component :component\n                  parent-children  :children\n                  :as              ast}]\n  (let [parent-key      (comp/class->registry-key parent-component)\n        parent-children (seq parent-children)\n        update-index    (fn [idx k c] (update idx k (fnil conj #{}) c))]\n    (if parent-children\n      (reduce\n        (fn [idx {:keys [key dispatch-key children] :as child-ast}]\n          (cond-> idx\n            (and (vector? key) (= '_ (second key))) (update-index dispatch-key parent-key)\n            (and (vector? key) (not= '_ (second key))) (update-index key parent-key)\n            (keyword? key) (update-index key parent-key)\n            (seq children) (index-query* child-ast)))\n        prop->classes\n        parent-children)\n      prop->classes)))\n\n(defn index-query\n  \"Create an index of the given component-annotated query. Returns a map from query keyword to the component\n  class(es) that query for that keyword.\"\n  [query]\n  (let [ast (eql/query->ast query)]\n    (index-query* {} ast)))\n\n(defn top-level-keys\n  \"Return a set of keywords that are in the top-level of the given AST\"\n  [ast]\n  (let [{:keys [children]} ast]\n    (into #{} (comp (map :key) (filter keyword?)) children)))\n\n(defn link-query-props\n  \"Returns a set of all of the keys that appear in link refs `[:k '_]` in the entire ast.\"\n  [{:keys [key children] :as ast}]\n  (cond\n    (fdn/link-ref? key) (apply set/union #{(first key)} (map link-query-props children))\n    (seq children) (apply set/union (map link-query-props children))\n    :otherwise #{}))\n\n(defn index-root!\n  \"Index the root query (see index-query) and side-effect the result (`prop->classes`) into the given app.\n  This function assumes the `root-class` has already been supplied to the app (i.e. is has been mounted).\"\n  [app]\n  (log/debug \"(Re)indexing application query for prop->classes\")\n  (let [{:com.fulcrologic.fulcro.application/keys [state-atom runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [root-class]} @runtime-atom\n        state-map       @state-atom\n        root-query      (comp/get-query root-class state-map)\n        ast             (eql/query->ast root-query)\n        prop->classes   (index-query root-query)\n        idents-in-joins (into #{} (filter eql/ident?) (keys prop->classes))\n        root-props      (top-level-keys ast)\n        linked-props    (link-query-props ast)]\n    (swap! runtime-atom (fn [s]\n                          (-> s\n                            (assoc-in [:com.fulcrologic.fulcro.application/indexes :root-props] root-props)\n                            (assoc-in [:com.fulcrologic.fulcro.application/indexes :linked-props] linked-props)\n                            (assoc-in [:com.fulcrologic.fulcro.application/indexes :idents-in-joins] idents-in-joins)\n                            (assoc-in [:com.fulcrologic.fulcro.application/indexes :prop->classes] prop->classes))))))\n\n(defn- index-component* [runtime-state instance ident cls]\n  (let [k (comp/class->registry-key cls)]\n    (cond-> runtime-state\n      k (update-in\n          [:com.fulcrologic.fulcro.application/indexes :class->components k]\n          (fnil conj #{})\n          instance)\n      ident (update-in\n              [:com.fulcrologic.fulcro.application/indexes :ident->components ident]\n              (fnil conj #{})\n              instance))))\n\n(defn index-component!\n  \"Add a component instance to the app index. This adds the component to the `class->components` and\n   `ident->components` indexes.\"\n  [this]\n  (let [{:keys [:com.fulcrologic.fulcro.application/runtime-atom]} (comp/any->app this)\n        get-ident (comp/component-options this :ident)]\n    (let [ident (when get-ident (get-ident this (comp/props this)))\n          cls   (comp/react-type this)]\n      (when #?(:cljs goog.DEBUG :clj true)\n        (when ident\n          (log/debug \"Indexing component \" ident))\n        (when (and ident (not (eql/ident? ident)))\n          (log/error \"Component\" (comp/component-name this) \"supplied an invalid ident\" ident))\n        (when (and ident (nil? (second ident)))\n          (log/info\n            (str \"component \" (comp/component-name this) \"'s ident (\" ident \") has a `nil` second element.\"\n              \" This warning can be safely ignored if that is intended.\"))))\n      (swap! runtime-atom index-component* this ident cls))))\n\n(defn- drop-component*\n  [runtime-state instance ident cls]\n  (let [k (comp/class->registry-key cls)]\n    (cond-> (update-in runtime-state [:com.fulcrologic.fulcro.application/indexes :class->components k]\n              disj instance)\n      ident (update-in\n              [:com.fulcrologic.fulcro.application/indexes :ident->components ident]\n              disj\n              instance))))\n\n(defn drop-component!\n  \"Remove the component instance from the indexes. If ident is supplied it uses that, otherwise it gets the\n  ident from the component itself.\"\n  ([this ident]\n   (let [{:keys [:com.fulcrologic.fulcro.application/runtime-atom]} (comp/any->app this)\n         cls (comp/react-type this)]\n     (when (and #?(:cljs goog.DEBUG :clj true) ident)\n       (log/debug \"Dropping component from index\" ident))\n     (when ident\n       (swap! runtime-atom drop-component* this ident cls))))\n  ([this]\n   (let [old-ident (comp/get-ident this)]\n     (drop-component! this old-ident))))\n\n(defmutation reindex\n  \"Mutation: re-index the application (typically after a dynamic query change).\"\n  [_]\n  (action [{:keys [app]}]\n    (if app\n      (index-root! app)\n      (log/error \"Unable to re-index root. App was not set in the mutation env.\"))))\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["p__65901","map__65902","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.fulcrologic.fulcro.algorithms.indexing/index-query*","prop->classes","parent-component","parent-children","ast","parent-key","com.fulcrologic.fulcro.components/class->registry-key","cljs.core/seq","update-index","idx","k","c","cljs.core.update","cljs.core.fnil","cljs.core/conj","cljs.core.reduce","p__65916","map__65917","key","dispatch-key","children","child-ast","G__65920","cljs.core/vector?","cljs.core._EQ_","cljs.core/second","cljs.core.not_EQ_","cljs.core/Keyword","com.fulcrologic.fulcro.algorithms.indexing/index-query","query","edn-query-language.core/query->ast","com.fulcrologic.fulcro.algorithms.indexing/top-level-keys","map__65935","cljs.core.into","cljs.core.comp","cljs.core.map","cljs.core.filter","cljs.core/keyword?","p__65940","map__65941","com.fulcrologic.fulcro.algorithms.indexing/link-query-props","com.fulcrologic.fulcro.algorithms.denormalize/link-ref?","clojure.set/union","cljs.core/first","com.fulcrologic.fulcro.algorithms.indexing/index-root!","app","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","map__65968","map__65969","cljs.core/deref","state-atom","runtime-atom","root-class","state-map","root-query","com.fulcrologic.fulcro.components.get_query","idents-in-joins","edn-query-language.core/ident?","cljs.core/keys","root-props","linked-props","cljs.core.swap_BANG_","s","cljs.core/assoc-in","com.fulcrologic.fulcro.algorithms.indexing/index-component*","runtime-state","instance","ident","cls","G__65979","cljs.core.update_in","com.fulcrologic.fulcro.algorithms.indexing/index-component!","this","map__66000","com.fulcrologic.fulcro.components/any->app","get-ident","com.fulcrologic.fulcro.components.component_options","G__66003","G__66004","com.fulcrologic.fulcro.components/props","com.fulcrologic.fulcro.components/react-type","js/goog.DEBUG","and__4115__auto__","com.fulcrologic.fulcro.components/component-name","com.fulcrologic.fulcro.algorithms.indexing/drop-component*","G__66019","cljs.core/disj","var_args","G__66024","com.fulcrologic.fulcro.algorithms.indexing/drop-component!","js/Error","map__66027","old-ident","com.fulcrologic.fulcro.components.get_ident","com.fulcrologic.fulcro.algorithms.indexing.drop_component_BANG_","com.fulcrologic.fulcro.algorithms.indexing/reindex","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","p__66033","map__66034","*after-render*-orig-val__66043","com.fulcrologic.fulcro.components/*after-render*","*after-render*-temp-val__66044","env","*after-render*-orig-val__66048","*after-render*-temp-val__66049","temp__5735__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","_"]],"~:used-vars",["^O",["~$cljs.core/comp","~$com.fulcrologic.fulcro.algorithms.indexing/reindex","~$com.fulcrologic.fulcro.algorithms.indexing/index-component*","~$com.fulcrologic.fulcro.algorithms.indexing/index-component!","~$cljs.core/keyword?","~$cljs.core/filter","~$com.fulcrologic.fulcro.algorithms.indexing/drop-component*","~$taoensso.timbre/-log!","~$com.fulcrologic.fulcro.mutations/mutate","~$edn-query-language.core/ident?","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/apply","~$cljs.core/Delay","~$cljs.core/fnil","~$cljs.core/into","~$cljs.core/conj","~$com.fulcrologic.fulcro.components/component-name","~$taoensso.timbre/*config*","~$cljs.core/map","~$cljs.core/swap!","~$cljs.core/-add-method","~$com.fulcrologic.fulcro.algorithms.indexing/link-query-props","~$com.fulcrologic.fulcro.algorithms.indexing/top-level-keys","~$cljs.core/second","~$js/goog.DEBUG","~$cljs.core/not","~$com.fulcrologic.fulcro.algorithms.indexing/drop-component!","~$com.fulcrologic.fulcro.algorithms.denormalize/link-ref?","~$cljs.core/disj","~$clojure.set/union","~$cljs.core/assoc-in","~$com.fulcrologic.fulcro.algorithms.indexing/index-query*","~$com.fulcrologic.fulcro.mutations/->Mutation","~$com.fulcrologic.fulcro.algorithms.indexing/index-root!","~$cljs.core/first","~$cljs.core/update-in","~$js/Error","~$com.fulcrologic.fulcro.algorithms.indexing/index-query","~$com.fulcrologic.fulcro.components/*after-render*"]]],"~:cache-keys",["~#cmap",[["^1H","com/fulcrologic/fulcro/algorithms/normalize.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^14","^13","^16","^X","^Z","^10"]]],["^1H","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.dom.HtmlElement"]]],["^1H","goog/async/freelist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.labs.userAgent.util","~$goog.string"]]],["^1H","expound/util.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13"]]],["^1H","goog/crypt/crypt.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.array","~$goog.asserts"]]],["^1H","goog/timer/timer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.Promise","~$goog.events.EventTarget"]]],["^1H","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^Z"]]],["^1H","cljs/spec/gen/alpha.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","~$goog.Uri"]]],["^1H","com/fulcrologic/fulcro/algorithms/indexing.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^10","^16","^12","^K","^M","^W","^X","^18","^Z"]]],["^1H","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","~$clojure.string","^2X"]]],["^1H","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z"]]],["^1H","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2X"]]],["^1H","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1H","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2W","~$goog.object","~$goog.string.internal"]]],["^1H","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^36"]]],["^1H","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z"]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","fab07a5b6a308df61709bbce28c682a0ca4672ed","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1H","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^Z","^32","^X","^35","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1H","expound/problems.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","~$expound.paths","^@"]]],["^1H","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2W","~$goog.reflect","^2X"]]],["^1H","goog/structs/prioritypool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1H","goog/async/run.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1H","taoensso/encore.cljs"],["30c096c80ac45227d869087a80755500fca98346","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^32","^W","~$cljs.reader","~$cljs.tools.reader.edn","^35","^2X","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1H","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/async/workqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","~$goog.async.FreeList"]]],["^1H","com/fulcrologic/fulcro/dom/events.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13"]]],["^1H","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^33","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1H","goog/promise/resolver.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^34"]]],["^1H","cljs/tools/reader/edn.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2X","^3O"]]],["^1H","goog/structs/priorityqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.structs.Heap"]]],["^1H","goog/net/xhrio.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.Timer","^2Y","^2Z","^3X","^30","~$goog.json.hybrid","~$goog.log","^3U","^3T","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^35","^2X","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^34"]]],["^1H","goog/promise/thenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13"]]],["^1H","cljs/pprint.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^32","^2X","^3O"]]],["^1H","com/fulcrologic/fulcro/algorithms/data_targeting.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^@","^W","^M","^Z","^X"]]],["^1H","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^41","^42","^43","^40","^2Y","^2X","^3O"]]],["^1H","expound/alpha.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","~$expound.problems","^@","^32","^W","~$clojure.walk","~$expound.printer","~$expound.util","~$expound.ansi","^D"]]],["^1H","goog/net/wrapperxmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1H","goog/events/eventtarget.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.Disposable","^2Z","^3P","~$goog.events.Event","^3Z","^3[","^35"]]],["^1H","com/fulcrologic/guardrails/core.cljc"],["fea1142983ea044a9d4139a04fb7599e98df5174","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^32","^Z","^@","~$expound.alpha"]]],["^1H","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.disposable.IDisposable"]]],["^1H","expound/ansi.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^32"]]],["^1H","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^3=","node_modules/react/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","fab07a5b6a308df61709bbce28c682a0ca4672ed","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^3>","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1H","shadow/js.js"],["bc0862a18183110802758387126e17faaedc1895","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z"]]],["^1H","goog/structs/set.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^4;","~$goog.structs.Collection","^4<"]]],"~:SHADOW-TIMESTAMP",[1598567487000,1598567487000,1592012038000],["^3=","node_modules/react/cjs/react.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","fab07a5b6a308df61709bbce28c682a0ca4672ed","ea9e9a66370bbe35b404f4de02d009d42a753e6d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^3>","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"]]],["^1H","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","^3F"]]],["^1H","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.events.ListenableKey"]]],["^1H","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","~$goog.html.trustedtypes","^39","^3:","^3;","^3<"]]],["^1H","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","~$goog.events.Listener","^35"]]],["^1H","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","taoensso/truss.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","~$taoensso.truss.impl"]]],["^1H","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","com/fulcrologic/fulcro/algorithms/merge.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","~$com.fulcrologic.fulcro.algorithms.data-targeting","^10","~$com.fulcrologic.fulcro.algorithms.lookup","~$com.fulcrologic.fulcro.algorithms.normalize","^12","^16","^X","^Z","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1H","edn_query_language/core.cljc"],["89cd2ff9787f6dfcb81506253473dfa9b27d718a","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^@"]]],["^1H","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z","~$goog.html.SafeUrl","^3;","^3<","^36"]]],["^1H","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4W","^38","~$goog.html.uncheckedconversions","^3;","^36"]]],["^1H","expound/paths.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^@","^4A"]]],["^1H","taoensso/truss/impl.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^W"]]],["^1H","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13"]]],["^1H","goog/useragent/product.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^3C","^3E","^34"]]],["^1H","goog/net/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1H","goog/net/xhriopool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^3Q","~$goog.structs.PriorityPool"]]],["^1H","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z","~$goog.dom.TagName","~$goog.dom.tags","^4[","^50","~$goog.html.SafeStyleSheet","^4W","^38","^4P","^39","^3:","^3C","^35","^3;","^3<","^36"]]],["^1H","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^35"]]],["^1H","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/structs/queue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y"]]],["^1H","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2W","^2X"]]],["^1H","taoensso/timbre/appenders/core.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^32","^18"]]],["^1H","cljs/reader.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^35","^44","^3M","^3O"]]],["^1H","com/fulcrologic/fulcro/mutations.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^10","~$com.fulcrologic.fulcro.dom.events","^M","^X","^Z","^18","^@","^4S","~$com.fulcrologic.fulcro.algorithms.merge","^4T","^4V","^32"]]],["^1H","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^55","~$goog.dom.safe","^4Z","^51","~$goog.math.Coordinate","~$goog.math.Size","^35","^2X","~$goog.string.Unicode","^34"]]],["^1H","com/fulcrologic/fulcro/components.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^35","~$cljsjs.react","^X","^@","^Z","^4?","^32","^16","^12","^4T","^M","^W"]]],["^1H","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.debug.Error","^5;"]]],["^1H","goog/debug/logbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","~$goog.debug.LogRecord"]]],["^1H","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z","^2X","^4;","^4<","^4=","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1H","goog/net/errorcode.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^3=","node_modules/object-assign/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","fab07a5b6a308df61709bbce28c682a0ca4672ed","519ffd5a4c91b67302cc9947b794966d629860cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^3>"]]],["^1H","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/promise/promise.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.Thenable","^2Z","^3W","~$goog.async.run","^3K","^5A","~$goog.promise.Resolver"]]],["^1H","cljs/spec/alpha.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^35","^4?","^D","^32"]]],["^1H","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/debug/logrecord.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",[]]],["^1H","goog/json/hybrid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","~$goog.json"]]],["^1H","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^35"]]],["^1H","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^41","^32","~$cljs.tools.reader.impl.inspect"]]],["^1H","cljsjs/react.cljs"],["9ba9f8ed128a3c607c8b81217a06b6098d2484d1","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","~$module$node_modules$react$index"]]],["^1H","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^2X","^3O"]]],["^1H","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^Z","^4?"]]],["^1H","goog/structs/pool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^4E","~$goog.structs.Queue","~$goog.structs.Set"]]],["^3=","node_modules/react/cjs/react.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","fab07a5b6a308df61709bbce28c682a0ca4672ed","32f2924b22daf411bb2b61bc45a3540aca73e0b2","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^3>","^4M"]]],["^1H","goog/net/httpstatus.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/structs/heap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^35","~$goog.structs.Node"]]],["^1H","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z"]]],["^1H","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^5<","^51","^3;","^36"]]],["^1H","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^36"]]],["^1H","expound/printer.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^32","^@","^H","^W","^4A","^4B","^3B","^4?","^3N","^2X"]]],["^1H","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","~$goog.debug.errorcontext","^34"]]],["^1H","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.math"]]],["^1H","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^42","^2X","^3O"]]],["^1H","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z","^4Y","^5O"]]],["^1H","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^3X","~$goog.dom","^55","^5<","^4Y","^4Z","^38","^3C","^3D","^3;"]]],["^1H","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","^4Z","^4[","^50","^57","^4W","^38","^3;","^36"]]],["^1H","goog/debug/logger.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z","~$goog.debug","~$goog.debug.LogBuffer","^5B"]]],["^3=","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","fab07a5b6a308df61709bbce28c682a0ca4672ed","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^3>"]]],["^1H","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^4E","~$goog.events.EventId"]]],["^1H","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^40","^41","^42"]]],["^1H","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","~$goog.math.Long","~$goog.math.Integer","^2X","^35","^2Y","^31","^3O"]]],["^1H","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","^4P","^3;","^3<"]]],["^1H","goog/log/log.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^5Q","~$goog.debug.LogManager","^5B","~$goog.debug.Logger"]]],["^1H","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z","^50","^35","^3;","^3<","^36"]]],["^1H","goog/structs/collection.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^5Q","^33","^4F","~$goog.events.EventType","^3F","^34"]]],["^1H","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^3F"]]],["^1H","goog/structs/node.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^34"]]],["^1H","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13"]]],["^1H","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Y","^2Z","^2X"]]],["^1H","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","^3<"]]],["^1H","taoensso/timbre.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^32","^18","~$taoensso.timbre.appenders.core"]]],["^1H","goog/json/json.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^5S"]]],["^1H","goog/net/xmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^4C"]]],["^1H","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["d8ebbe409b4452a8d547a22bfcc530522f1517dc","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^13","^X"]]],["^1H","goog/net/xmlhttp.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","~$goog.net.WrapperXmlHttpFactory","^4D"]]],["^1H","goog/net/xhrlike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14"]]],["^1H","goog/crypt/base64.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2R",["^ ","^2S",null,"^2T",["^O",[]],"^2U",["^14","^2Z","^3@","^2X","^34","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/home/patro/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1580742522000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/algorithms/data_targeting.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/paths.cljc",1598567482000,"jar:file:/home/patro/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1598567491000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1580245266000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/algorithms/normalize.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1580246397000,"jar:file:/home/patro/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1580742522000,"jar:file:/home/patro/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/alpha.cljc",1598567482000,"jar:file:/home/patro/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/ansi.cljc",1598567482000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1592012038000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/mutations.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1592012038000,"jar:file:/home/patro/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1580246694000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1592012038000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/spec/gen/alpha.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/algorithms/merge.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1592012038000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/dom/events.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/clojure-future-spec/clojure-future-spec/1.9.0-beta4/clojure-future-spec-1.9.0-beta4.jar!/clojure/spec/gen/alpha.clj",1597755174000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1580245266000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1580245266000,"jar:file:/home/patro/.m2/repository/com/taoensso/encore/2.117.0/encore-2.117.0.jar!/taoensso/encore.clj",1597755175000,"jar:file:/home/patro/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/printer.cljc",1598567482000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1580246397000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/core.cljc",1586366410000,"jar:file:/home/patro/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1581097609000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/utils.cljc",1586366410000,"jar:file:/home/patro/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1580246694000,"jar:file:/home/patro/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/util.cljc",1598567482000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1580245266000,"jar:file:/home/patro/.m2/repository/edn-query-language/eql/1.0.0/eql-1.0.0.jar!/edn_query_language/core.cljc",1592144842000,"jar:file:/home/patro/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1580246694000,"jar:file:/home/patro/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1580246694000,"jar:file:/home/patro/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1580246694000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/algorithms/tempid.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/edn.clj",1580246694000,"jar:file:/home/patro/.m2/repository/expound/expound/0.8.5/expound-0.8.5.jar!/expound/problems.cljc",1598567482000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1580245266000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1581097609000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/fulcro/3.2.12/fulcro-3.2.12.jar!/com/fulcrologic/fulcro/components.cljc",1598567490000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/spec/alpha.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1580742522000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1580245266000,"jar:file:/home/patro/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1589469725000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/main.clj",1580245266000,"jar:file:/home/patro/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1580246694000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/reader.clj",1592012038000,"jar:file:/home/patro/.m2/repository/clojure-future-spec/clojure-future-spec/1.9.0-beta4/clojure-future-spec-1.9.0-beta4.jar!/clojure/spec/alpha.clj",1597755174000,"jar:file:/home/patro/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1580742522000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/pprint.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/config.cljc",1586366410000,"jar:file:/home/patro/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1592012038000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1580245266000,"jar:file:/home/patro/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1580245266000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions that implement the query and component indexing. Fulcro keeps indexes of on-screen\n   components by ident and class. These enable Fulcro to find on-screen components for things\n   like targeted refresh. You are allowed to use the indexes to find components for whatever\n   purpose suits your needs (e.g. looking at component options).","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",1,"^9",5,"^:",1,"^;",47],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",["^ ","^J","^K","^L","^M"],"^N",["^O",[]],"^P","^Q","^T",null,"^U",["^ ","^V","^W","^X","^X","^M","^M","^Y","^Z","^[","^10","^11","^X","^12","^12","^13","^13","^14","^14","^W","^W","^15","^16","^K","^K","^17","^18","^19","^M","^10","^10","^Z","^Z","^18","^18","^1:","^12","^16","^16"],"^1;",["^O",["^1<"]],"~:shadow/js-access-global",["^O",["Error"]],"^1=",["^ ","^J","^K","^L","^M"],"~:defs",["^ ","~$link-query-props",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",49,"^9",7,"^:",49,"^;",23,"~:arglists",["^1@",["~$quote",["^1@",[[["^ ","~:keys",["~$key","~$children"],"^1B","~$ast"]]]]]],"^6","Returns a set of all of the keys that appear in link refs `[:k '_]` in the entire ast."],"^P","^2>","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",23,"~:method-params",["^1@",[["~$p__65940"]]],"~:protocol-impl",null,"~:arglists-meta",["^1@",[null,null]],"^9",1,"~:variadic?",false,"^8",49,"~:ret-tag",["^O",["~$any","~$cljs.core/ISet"]],"^:",49,"~:max-fixed-arity",1,"~:fn-var",true,"^7J",["^1@",["^7K",["^1@",[[["^ ","^7L",["^7M","^7N"],"^1B","^7O"]]]]]],"^6","Returns a set of all of the keys that appear in link refs `[:k '_]` in the entire ast."],"~$index-query*",["^ ","^7I",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",17,"^9",8,"^:",17,"^;",20,"~:private",true,"^7J",["^1@",["^7K",["^1@",[["~$prop->classes",["^ ","~$parent-component","~:component","~$parent-children","~:children","^1B","^7O"]]]]]]],"^7[",true,"^P","^2H","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",20,"^7P",["^1@",[["^80","~$p__65901"]]],"^7R",null,"^7S",["^1@",[null,null]],"^9",1,"^7T",false,"^8",17,"^7U",["^O",[null,"^7V"]],"^:",17,"^7X",2,"^7Y",true,"^7J",["^1@",["^7K",["^1@",[["^80",["^ ","^81","^82","^83","^84","^1B","^7O"]]]]]]],"~$drop-component!",["^ ","^7I",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",119,"^9",7,"^:",119,"^;",22,"^7J",["^1@",["^7K",["^1@",[["~$this","~$ident"],["^87"]]]]],"^6","Remove the component instance from the indexes. If ident is supplied it uses that, otherwise it gets the\n  ident from the component itself.","~:top-fn",["^ ","^7T",false,"~:fixed-arity",2,"^7X",2,"^7P",[["^87","^88"],["^87"]],"^7J",["^1@",[["^87","^88"],["^87"]]],"^7S",["^1@",[null,null]]]],"^P","^2C","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",22,"^89",["^ ","^7T",false,"^8:",2,"^7X",2,"^7P",[["^87","^88"],["^87"]],"^7J",["^1@",[["^87","^88"],["^87"]]],"^7S",["^1@",[null,null]]],"^7P",[["^87","^88"],["^87"]],"^7R",null,"^8:",2,"^7S",["^1@",[null,null]],"^9",1,"^7T",false,"~:methods",[["^ ","^8:",2,"^7T",false,"~:tag",["^O",[null,"^7V","~$clj-nil"]]],["^ ","^8:",1,"^7T",false,"^8<",["^O",[null,"^7V","^8="]]]],"^8",119,"^:",119,"^7X",2,"^7Y",true,"^7J",["^1@",[["^87","^88"],["^87"]]],"^6","Remove the component instance from the indexes. If ident is supplied it uses that, otherwise it gets the\n  ident from the component itself."],"~$index-root!",["^ ","^7I",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",57,"^9",7,"^:",57,"^;",18,"^7J",["^1@",["^7K",["^1@",[["~$app"]]]]],"^6","Index the root query (see index-query) and side-effect the result (`prop->classes`) into the given app.\n  This function assumes the `root-class` has already been supplied to the app (i.e. is has been mounted)."],"^P","^2J","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",18,"^7P",["^1@",[["^8?"]]],"^7R",null,"^7S",["^1@",[null,null]],"^9",1,"^7T",false,"^8",57,"^7U",["^O",[null,"^7V"]],"^:",57,"^7X",1,"^7Y",true,"^7J",["^1@",["^7K",["^1@",[["^8?"]]]]],"^6","Index the root query (see index-query) and side-effect the result (`prop->classes`) into the given app.\n  This function assumes the `root-class` has already been supplied to the app (i.e. is has been mounted)."],"~$index-query",["^ ","^7I",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",36,"^9",7,"^:",36,"^;",18,"^7J",["^1@",["^7K",["^1@",[["~$query"]]]]],"^6","Create an index of the given component-annotated query. Returns a map from query keyword to the component\n  class(es) that query for that keyword."],"^P","^2N","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",18,"^7P",["^1@",[["^8A"]]],"^7R",null,"^7S",["^1@",[null,null]],"^9",1,"^7T",false,"^8",36,"^7U",["^O",[null,"^7V"]],"^:",36,"^7X",1,"^7Y",true,"^7J",["^1@",["^7K",["^1@",[["^8A"]]]]],"^6","Create an index of the given component-annotated query. Returns a map from query keyword to the component\n  class(es) that query for that keyword."],"~$reindex",["^ ","^P","^1U","^6","Mutation: re-index the application (typically after a dynamic query change).","^5",["^ ","^6","Mutation: re-index the application (typically after a dynamic query change).","^7",null],"^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",133,"^9",1,"^8<","~$com.fulcrologic.fulcro.mutations/Mutation"],"~$index-component*",["^ ","^7I",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",78,"^9",8,"^:",78,"^;",24,"^7[",true,"^7J",["^1@",["^7K",["^1@",[["~$runtime-state","~$instance","^88","~$cls"]]]]]],"^7[",true,"^P","^1V","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",24,"^7P",["^1@",[["^8E","^8F","^88","^8G"]]],"^7R",null,"^7S",["^1@",[null,null]],"^9",1,"^7T",false,"^8",78,"^7U",["^O",[null,"~$clj","^7V"]],"^:",78,"^7X",4,"^7Y",true,"^7J",["^1@",["^7K",["^1@",[["^8E","^8F","^88","^8G"]]]]]],"~$index-component!",["^ ","^7I",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",90,"^9",7,"^:",90,"^;",23,"^7J",["^1@",["^7K",["^1@",[["^87"]]]]],"^6","Add a component instance to the app index. This adds the component to the `class->components` and\n   `ident->components` indexes."],"^P","^1W","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",23,"^7P",["^1@",[["^87"]]],"^7R",null,"^7S",["^1@",[null,null]],"^9",1,"^7T",false,"^8",90,"^7U",["^O",[null,"^7V"]],"^:",90,"^7X",1,"^7Y",true,"^7J",["^1@",["^7K",["^1@",[["^87"]]]]],"^6","Add a component instance to the app index. This adds the component to the `class->components` and\n   `ident->components` indexes."],"~$drop-component*",["^ ","^7I",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",109,"^9",8,"^:",109,"^;",23,"^7[",true,"^7J",["^1@",["^7K",["^1@",[["^8E","^8F","^88","^8G"]]]]]],"^7[",true,"^P","^1Z","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",23,"^7P",["^1@",[["^8E","^8F","^88","^8G"]]],"^7R",null,"^7S",["^1@",[null,null]],"^9",1,"^7T",false,"^8",109,"^7U",["^O",["^8H","^7V"]],"^:",109,"^7X",4,"^7Y",true,"^7J",["^1@",["^7K",["^1@",[["^8E","^8F","^88","^8G"]]]]]],"~$top-level-keys",["^ ","^7I",null,"^5",["^ ","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^8",43,"^9",7,"^:",43,"^;",21,"^7J",["^1@",["^7K",["^1@",[["^7O"]]]]],"^6","Return a set of keywords that are in the top-level of the given AST"],"^P","^2?","^7","com/fulcrologic/fulcro/algorithms/indexing.cljc","^;",21,"^7P",["^1@",[["^7O"]]],"^7R",null,"^7S",["^1@",[null,null]],"^9",1,"^7T",false,"^8",43,"^7U",["^O",["^8H","^7V"]],"^:",43,"^7X",1,"^7Y",true,"^7J",["^1@",["^7K",["^1@",[["^7O"]]]]],"^6","Return a set of keywords that are in the top-level of the given AST"]],"^1>",["^ ","^M","^M","^Y","^Z","^[","^10","^13","^13","^K","^K","^17","^18","^19","^M","^10","^10","^Z","^Z","^18","^18"],"~:cljs.analyzer/constants",["^ ","^1;",["^O",["^1U","^84","~:key","~:com.fulcrologic.fulcro.application/indexes","~:params","~:ast","~:debug","~:idents-in-joins","~:root-props","~:prop->classes","~$_","^82","~:com.fulcrologic.fulcro.application/state-atom","~:otherwise","~:class->components","~:com.fulcrologic.fulcro.application/root-class","~:com.fulcrologic.fulcro.application/runtime-atom","~:app","~:ident","~:dispatch-key","~:info","~:action","~:error","~:ident->components","~:linked-props","~:default-result-action!","~:result-action","~:auto","~:p"]],"~:order",["^82","^84","^8M","^90","~$_","^8V","^8Q","~:p","^98","^8U","^8Y","^8X","^8N","^8S","^95","^8R","^8T","^8W","^94","^8[","^93","^91","^1U","^8O","^8P","^92","^97","^8Z","^96"]],"^1D",["^ ","^1<",["^O",[]]],"^1E",["^ "],"^1F",["^14","^13","^10","^16","^12","^K","^M","^W","^X","^18","^Z"]],"^S","^Q","~:ns-specs",["^ "],"~:ns-spec-vars",["^O",[]],"~:compiler-options",["^2Q",[["^9<","~:static-fns"],true,["^9<","~:shadow-tweaks"],null,["^9<","~:source-map-inline"],null,["^9<","~:elide-asserts"],false,["^9<","~:optimize-constants"],null,["^9<","^1K"],null,["^9<","~:external-config"],["^ ","~:fulcro",["^ ","~:wrap-inputs?",false]],["^9<","~:tooling-config"],null,["^9<","~:emit-constants"],null,["^9<","~:load-tests"],null,["^9<","~:form-size-threshold"],null,["^9<","~:data-readers"],null,["^9<","~:infer-externs"],"^98",["^9<","^1M"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^9<","~:fn-invoke-direct"],null,["^9<","~:source-map"],true]]]